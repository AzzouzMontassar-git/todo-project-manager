{"ast":null,"code":"import { environment } from './../environments/environment'; // ðŸ”¹ Import du fichier env\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.API_URL + '/auth';\n  }\n  login(credentials) {\n    return this.http.post(`${this.apiUrl}/login`, credentials);\n  }\n  saveToken(token) {\n    localStorage.setItem('authToken', token);\n  }\n  getToken() {\n    return localStorage.getItem('authToken');\n  }\n  logout() {\n    localStorage.removeItem('authToken');\n  }\n  isLoggedIn() {\n    return this.getToken() !== null;\n  }\n  static {\n    this.Éµfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ÉµÉµinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.Éµprov = /*@__PURE__*/i0.ÉµÉµdefineInjectable({\n      token: AuthService,\n      factory: AuthService.Éµfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","AuthService","constructor","http","apiUrl","API_URL","login","credentials","post","saveToken","token","localStorage","setItem","getToken","getItem","logout","removeItem","isLoggedIn","i0","ÉµÉµinject","i1","HttpClient","factory","Éµfac","providedIn"],"sources":["C:\\Users\\monta\\OneDrive\\Documents\\Projects\\todo-project-manager\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from './../environments/environment'; // ðŸ”¹ Import du fichier env\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private apiUrl = environment.API_URL + '/auth';\n\n  constructor(private http: HttpClient) { }\n\n \n\n  login(credentials: { email: string; password: string }): Observable<any> {\n    return this.http.post(`${this.apiUrl}/login`, credentials);\n  }\n\n  saveToken(token: string): void {\n    localStorage.setItem('authToken', token);\n  }\n\n  getToken(): string | null {\n    return localStorage.getItem('authToken');\n  }\n\n  logout(): void {\n    localStorage.removeItem('authToken');\n  }\n\n  isLoggedIn(): boolean {\n    return this.getToken() !== null;\n  }\n}\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,+BAA+B,CAAC,CAAC;;;AAK7D,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAGJ,WAAW,CAACK,OAAO,GAAG,OAAO;EAEN;EAIxCC,KAAKA,CAACC,WAAgD;IACpD,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,GAAG,IAAI,CAACJ,MAAM,QAAQ,EAAEG,WAAW,CAAC;EAC5D;EAEAE,SAASA,CAACC,KAAa;IACrBC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEF,KAAK,CAAC;EAC1C;EAEAG,QAAQA,CAAA;IACN,OAAOF,YAAY,CAACG,OAAO,CAAC,WAAW,CAAC;EAC1C;EAEAC,MAAMA,CAAA;IACJJ,YAAY,CAACK,UAAU,CAAC,WAAW,CAAC;EACtC;EAEAC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACJ,QAAQ,EAAE,KAAK,IAAI;EACjC;;;uBAzBWZ,WAAW,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXpB,WAAW;MAAAqB,OAAA,EAAXrB,WAAW,CAAAsB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}