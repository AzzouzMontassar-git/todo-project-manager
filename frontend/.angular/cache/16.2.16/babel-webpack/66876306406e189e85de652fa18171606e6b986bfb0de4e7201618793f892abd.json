{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/dashboard-client.service\";\nimport * as i2 from \"@angular/common\";\nfunction DashboardClientComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nfunction DashboardClientComponent_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"p\");\n    i0.ɵɵtext(2, \"Aucun projet ne vous est assign\\u00E9.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction DashboardClientComponent_div_3_div_2_span_8_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \", \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardClientComponent_div_3_div_2_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, DashboardClientComponent_div_3_div_2_span_8_span_2_Template, 2, 0, \"span\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const userId_r8 = ctx.$implicit;\n    const last_r9 = ctx.last;\n    const ctx_r5 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.getUserName(userId_r8), \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !last_r9);\n  }\n}\nfunction DashboardClientComponent_div_3_div_2_li_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"input\", 14);\n    i0.ɵɵlistener(\"change\", function DashboardClientComponent_div_3_div_2_li_15_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const task_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r12.toggleTask(task_r11));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r11 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", task_r11.done);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"completed\", task_r11.done);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r11.title);\n  }\n}\nfunction DashboardClientComponent_div_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\")(6, \"strong\");\n    i0.ɵɵtext(7, \"Assign\\u00E9 \\u00E0:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, DashboardClientComponent_div_3_div_2_span_8_Template, 3, 2, \"span\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 9);\n    i0.ɵɵelement(10, \"input\", 10, 11);\n    i0.ɵɵelementStart(12, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function DashboardClientComponent_div_3_div_2_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const project_r4 = restoredCtx.$implicit;\n      const _r6 = i0.ɵɵreference(11);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      ctx_r14.addTask(project_r4, _r6.value);\n      return i0.ɵɵresetView(_r6.value = \"\");\n    });\n    i0.ɵɵtext(13, \"Ajouter T\\u00E2che\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"ul\");\n    i0.ɵɵtemplate(15, DashboardClientComponent_div_3_div_2_li_15_Template, 4, 4, \"li\", 8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const project_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(project_r4.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(project_r4.description);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", project_r4.assignedTo);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", project_r4.tasks);\n  }\n}\nfunction DashboardClientComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, DashboardClientComponent_div_3_div_1_Template, 3, 0, \"div\", 4);\n    i0.ɵɵtemplate(2, DashboardClientComponent_div_3_div_2_Template, 16, 4, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.projects.length === 0 && !ctx_r1.loadingProjects);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.projects);\n  }\n}\nexport class DashboardClientComponent {\n  constructor(dashboardClientService) {\n    this.dashboardClientService = dashboardClientService;\n    this.currentUser = null; // utilisateur connecté\n    this.projects = [];\n    this.users = [];\n    this.loadingProjects = true;\n    this.loadingUsers = true;\n    this.errorMessage = '';\n  }\n  ngOnInit() {\n    // Récupérer l'utilisateur connecté depuis le localStorage\n    const userData = localStorage.getItem('currentUser');\n    if (userData) {\n      this.currentUser = JSON.parse(userData);\n    } else {\n      console.error('Aucun utilisateur connecté trouvé dans localStorage.');\n      this.errorMessage = \"Vous n'êtes pas connecté.\";\n      this.loadingProjects = false;\n      this.loadingUsers = false;\n      return;\n    }\n    // Vérifier que l'email existe\n    if (!this.currentUser.email) {\n      console.error('Email de l’utilisateur manquant.');\n      this.errorMessage = \"Email utilisateur manquant.\";\n      this.loadingProjects = false;\n      this.loadingUsers = false;\n      return;\n    }\n    // Charger les projets assignés à l'utilisateur\n    this.dashboardClientService.getProjectsByUserEmail(this.currentUser.email).subscribe({\n      next: projects => {\n        this.projects = projects;\n        this.loadingProjects = false;\n      },\n      error: err => {\n        console.error('Erreur lors du chargement des projets :', err);\n        this.errorMessage = \"Impossible de charger les projets.\";\n        this.loadingProjects = false;\n      }\n    });\n    // Charger tous les utilisateurs pour les noms dans \"Assigné à\"\n    this.dashboardClientService.getAllUsers().subscribe({\n      next: users => {\n        this.users = users;\n        this.loadingUsers = false;\n      },\n      error: err => {\n        console.error('Erreur lors du chargement des utilisateurs :', err);\n        this.errorMessage = \"Impossible de charger les utilisateurs.\";\n        this.loadingUsers = false;\n      }\n    });\n  }\n  addTask(project, title) {\n    if (!title.trim()) return;\n    if (!project.id) {\n      console.error('ID du projet manquant pour ajouter une tâche.');\n      return;\n    }\n    const newTask = {\n      title,\n      done: false\n    };\n    this.dashboardClientService.addTaskToProject(project.id, newTask).subscribe({\n      next: savedTask => {\n        if (!project.tasks) project.tasks = [];\n        project.tasks.push(savedTask);\n      },\n      error: err => console.error('Erreur ajout tâche :', err)\n    });\n  }\n  toggleTask(task) {\n    if (!task.id) {\n      console.error('ID de la tâche manquant pour toggle.');\n      return;\n    }\n    this.dashboardClientService.toggleTaskStatus(task.id).subscribe({\n      next: updatedTask => {\n        task.done = updatedTask.done;\n      },\n      error: err => console.error('Erreur toggle tâche :', err)\n    });\n  }\n  getUserName(userId) {\n    const user = this.users.find(u => u.id === userId);\n    return user ? user.name : 'Utilisateur inconnu';\n  }\n  static {\n    this.ɵfac = function DashboardClientComponent_Factory(t) {\n      return new (t || DashboardClientComponent)(i0.ɵɵdirectiveInject(i1.DashboardClientService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardClientComponent,\n      selectors: [[\"app-dashboard-client\"]],\n      decls: 4,\n      vars: 3,\n      consts: [[\"class\", \"alert alert-error\", 4, \"ngIf\"], [\"class\", \"dashboard\", 4, \"ngIf\"], [1, \"alert\", \"alert-error\"], [1, \"dashboard\"], [\"class\", \"no-projects\", 4, \"ngIf\"], [\"class\", \"projects\", 4, \"ngFor\", \"ngForOf\"], [1, \"no-projects\"], [1, \"projects\"], [4, \"ngFor\", \"ngForOf\"], [1, \"add-task\"], [\"type\", \"text\", \"placeholder\", \"Nouvelle t\\u00E2che\"], [\"taskTitle\", \"\"], [3, \"click\"], [4, \"ngIf\"], [\"type\", \"checkbox\", 3, \"checked\", \"change\"]],\n      template: function DashboardClientComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(2, DashboardClientComponent_div_2_Template, 2, 1, \"div\", 0);\n          i0.ɵɵtemplate(3, DashboardClientComponent_div_3_Template, 3, 2, \"div\", 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\"Bonjour, \", (ctx.currentUser == null ? null : ctx.currentUser.name) || \"Utilisateur\", \"\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.currentUser);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf],\n      styles: [\".dashboard[_ngcontent-%COMP%] {\\n  max-width: 800px;\\n  margin: 20px auto;\\n  padding: 20px;\\n  background: #f4f6f8;\\n  border-radius: 10px;\\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\\n  font-family: Arial, sans-serif;\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  color: #333;\\n  margin-bottom: 30px;\\n}\\n\\n.projects[_ngcontent-%COMP%] {\\n  margin-bottom: 30px;\\n  padding: 15px;\\n  background: white;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\\n}\\n\\n.projects[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  margin-bottom: 5px;\\n  color: #555;\\n}\\n\\n.projects[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  margin: 5px 0;\\n  color: #666;\\n}\\n\\n.add-task[_ngcontent-%COMP%] {\\n  display: flex;\\n  margin-bottom: 10px;\\n}\\n\\n.add-task[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  flex: 1;\\n  padding: 6px;\\n  border-radius: 5px;\\n  border: 1px solid #ccc;\\n  margin-right: 10px;\\n}\\n\\n.add-task[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  padding: 6px 12px;\\n  border: none;\\n  background-color: #007bff;\\n  color: white;\\n  border-radius: 5px;\\n  cursor: pointer;\\n}\\n\\n.add-task[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #0056b3;\\n}\\n\\nul[_ngcontent-%COMP%] {\\n  list-style: none;\\n  padding-left: 0;\\n}\\n\\nli[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  margin-bottom: 5px;\\n}\\n\\nli[_ngcontent-%COMP%]   input[type=\\\"checkbox\\\"][_ngcontent-%COMP%] {\\n  margin-right: 10px;\\n}\\n\\n.completed[_ngcontent-%COMP%] {\\n  text-decoration: line-through;\\n  color: gray;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvZGFzaGJvYXJkL2Rhc2hib2FyZC1jbGllbnQvZGFzaGJvYXJkLWNsaWVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLG1CQUFtQjtFQUNuQixxQ0FBcUM7RUFDckMsOEJBQThCO0FBQ2hDOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsYUFBYTtFQUNiLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsc0NBQXNDO0FBQ3hDOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGFBQWE7RUFDYixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsT0FBTztFQUNQLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsc0JBQXNCO0VBQ3RCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1oseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSw2QkFBNkI7RUFDN0IsV0FBVztBQUNiIiwic291cmNlc0NvbnRlbnQiOlsiLmRhc2hib2FyZCB7XHJcbiAgbWF4LXdpZHRoOiA4MDBweDtcclxuICBtYXJnaW46IDIwcHggYXV0bztcclxuICBwYWRkaW5nOiAyMHB4O1xyXG4gIGJhY2tncm91bmQ6ICNmNGY2Zjg7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLDAsMCwwLjEpO1xyXG4gIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjtcclxufVxyXG5cclxuaDIge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBjb2xvcjogIzMzMztcclxuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG59XHJcblxyXG4ucHJvamVjdHMge1xyXG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbiAgcGFkZGluZzogMTVweDtcclxuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwwLDAsMC4wNSk7XHJcbn1cclxuXHJcbi5wcm9qZWN0cyBoMyB7XHJcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gIGNvbG9yOiAjNTU1O1xyXG59XHJcblxyXG4ucHJvamVjdHMgcCB7XHJcbiAgbWFyZ2luOiA1cHggMDtcclxuICBjb2xvcjogIzY2NjtcclxufVxyXG5cclxuLmFkZC10YXNrIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbn1cclxuXHJcbi5hZGQtdGFzayBpbnB1dCB7XHJcbiAgZmxleDogMTtcclxuICBwYWRkaW5nOiA2cHg7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG59XHJcblxyXG4uYWRkLXRhc2sgYnV0dG9uIHtcclxuICBwYWRkaW5nOiA2cHggMTJweDtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLmFkZC10YXNrIGJ1dHRvbjpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwNTZiMztcclxufVxyXG5cclxudWwge1xyXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgcGFkZGluZy1sZWZ0OiAwO1xyXG59XHJcblxyXG5saSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIG1hcmdpbi1ib3R0b206IDVweDtcclxufVxyXG5cclxubGkgaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdIHtcclxuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbn1cclxuXHJcbi5jb21wbGV0ZWQge1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xyXG4gIGNvbG9yOiBncmF5O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","errorMessage","ɵɵtemplate","DashboardClientComponent_div_3_div_2_span_8_span_2_Template","ɵɵtextInterpolate1","ctx_r5","getUserName","userId_r8","ɵɵproperty","last_r9","ɵɵlistener","DashboardClientComponent_div_3_div_2_li_15_Template_input_change_1_listener","restoredCtx","ɵɵrestoreView","_r13","task_r11","$implicit","ctx_r12","ɵɵnextContext","ɵɵresetView","toggleTask","done","ɵɵclassProp","title","DashboardClientComponent_div_3_div_2_span_8_Template","ɵɵelement","DashboardClientComponent_div_3_div_2_Template_button_click_12_listener","_r15","project_r4","_r6","ɵɵreference","ctx_r14","addTask","value","DashboardClientComponent_div_3_div_2_li_15_Template","name","description","assignedTo","tasks","DashboardClientComponent_div_3_div_1_Template","DashboardClientComponent_div_3_div_2_Template","ctx_r1","projects","length","loadingProjects","DashboardClientComponent","constructor","dashboardClientService","currentUser","users","loadingUsers","ngOnInit","userData","localStorage","getItem","JSON","parse","console","error","email","getProjectsByUserEmail","subscribe","next","err","getAllUsers","project","trim","id","newTask","addTaskToProject","savedTask","push","task","toggleTaskStatus","updatedTask","userId","user","find","u","ɵɵdirectiveInject","i1","DashboardClientService","selectors","decls","vars","consts","template","DashboardClientComponent_Template","rf","ctx","DashboardClientComponent_div_2_Template","DashboardClientComponent_div_3_Template"],"sources":["C:\\Users\\monta\\OneDrive\\Documents\\Projects\\todo-project-manager\\src\\app\\features\\dashboard\\dashboard-client\\dashboard-client.component.ts","C:\\Users\\monta\\OneDrive\\Documents\\Projects\\todo-project-manager\\src\\app\\features\\dashboard\\dashboard-client\\dashboard-client.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Project, Task, User, DashboardClientService } from '../../../services/dashboard-client.service';\n\n@Component({\n  selector: 'app-dashboard-client',\n  templateUrl: './dashboard-client.component.html',\n  styleUrls: ['./dashboard-client.component.css']\n})\nexport class DashboardClientComponent implements OnInit {\n  currentUser: User | null = null; // utilisateur connecté\n  projects: Project[] = [];\n  users: User[] = [];\n  loadingProjects: boolean = true;\n  loadingUsers: boolean = true;\n  errorMessage: string = '';\n\n  constructor(private dashboardClientService: DashboardClientService) {}\n\n  ngOnInit(): void {\n    // Récupérer l'utilisateur connecté depuis le localStorage\n    const userData = localStorage.getItem('currentUser');\n    if (userData) {\n      this.currentUser = JSON.parse(userData);\n    } else {\n      console.error('Aucun utilisateur connecté trouvé dans localStorage.');\n      this.errorMessage = \"Vous n'êtes pas connecté.\";\n      this.loadingProjects = false;\n      this.loadingUsers = false;\n      return;\n    }\n\n    // Vérifier que l'email existe\n    if (!this.currentUser.email) {\n      console.error('Email de l’utilisateur manquant.');\n      this.errorMessage = \"Email utilisateur manquant.\";\n      this.loadingProjects = false;\n      this.loadingUsers = false;\n      return;\n    }\n\n    // Charger les projets assignés à l'utilisateur\n    this.dashboardClientService.getProjectsByUserEmail(this.currentUser.email)\n      .subscribe({\n        next: (projects) => {\n          this.projects = projects;\n          this.loadingProjects = false;\n        },\n        error: (err) => {\n          console.error('Erreur lors du chargement des projets :', err);\n          this.errorMessage = \"Impossible de charger les projets.\";\n          this.loadingProjects = false;\n        }\n      });\n\n    // Charger tous les utilisateurs pour les noms dans \"Assigné à\"\n    this.dashboardClientService.getAllUsers()\n      .subscribe({\n        next: (users) => {\n          this.users = users;\n          this.loadingUsers = false;\n        },\n        error: (err) => {\n          console.error('Erreur lors du chargement des utilisateurs :', err);\n          this.errorMessage = \"Impossible de charger les utilisateurs.\";\n          this.loadingUsers = false;\n        }\n      });\n  }\n\n  addTask(project: Project, title: string) {\n    if (!title.trim()) return;\n    if (!project.id) {\n      console.error('ID du projet manquant pour ajouter une tâche.');\n      return;\n    }\n\n    const newTask: Task = { title, done: false };\n    this.dashboardClientService.addTaskToProject(project.id, newTask)\n      .subscribe({\n        next: (savedTask: Task) => {\n          if (!project.tasks) project.tasks = [];\n          project.tasks.push(savedTask);\n        },\n        error: (err) => console.error('Erreur ajout tâche :', err)\n      });\n  }\n\n  toggleTask(task: Task) {\n    if (!task.id) {\n      console.error('ID de la tâche manquant pour toggle.');\n      return;\n    }\n\n    this.dashboardClientService.toggleTaskStatus(task.id)\n      .subscribe({\n        next: (updatedTask: Task) => {\n          task.done = updatedTask.done;\n        },\n        error: (err) => console.error('Erreur toggle tâche :', err)\n      });\n  }\n\n  getUserName(userId: number): string {\n    const user = this.users.find(u => u.id === userId);\n    return user ? user.name : 'Utilisateur inconnu';\n  }\n}\n","<h2>Bonjour, {{ currentUser?.name || 'Utilisateur' }}</h2>\n\n<div *ngIf=\"errorMessage\" class=\"alert alert-error\">{{ errorMessage }}</div>\n\n<div class=\"dashboard\" *ngIf=\"currentUser\">\n  <div *ngIf=\"projects.length === 0 && !loadingProjects\" class=\"no-projects\">\n    <p>Aucun projet ne vous est assigné.</p>\n  </div>\n\n  <div class=\"projects\" *ngFor=\"let project of projects\">\n    <h3>{{ project.name }}</h3>\n    <p>{{ project.description }}</p>\n    <p><strong>Assigné à:</strong> \n      <span *ngFor=\"let userId of project.assignedTo; let last=last\">\n        {{ getUserName(userId) }}<span *ngIf=\"!last\">, </span>\n      </span>\n    </p>\n\n    <div class=\"add-task\">\n      <input #taskTitle type=\"text\" placeholder=\"Nouvelle tâche\" />\n      <button (click)=\"addTask(project, taskTitle.value); taskTitle.value=''\">Ajouter Tâche</button>\n    </div>\n\n    <ul>\n      <li *ngFor=\"let task of project.tasks\">\n        <input type=\"checkbox\" [checked]=\"task.done\" (change)=\"toggleTask(task)\" />\n        <span [class.completed]=\"task.done\">{{ task.title }}</span>\n      </li>\n    </ul>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}