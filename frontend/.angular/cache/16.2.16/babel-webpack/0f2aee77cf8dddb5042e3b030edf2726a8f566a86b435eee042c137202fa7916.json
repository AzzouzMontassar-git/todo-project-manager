{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let LoginComponent = class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.email = '';\n    this.motDePasse = '';\n    this.errorMessage = '';\n  }\n  login() {\n    if (!this.email || !this.motDePasse) {\n      this.errorMessage = 'Please fill in all fields';\n      return;\n    }\n    this.authService.login(this.email, this.motDePasse).subscribe({\n      next: res => {\n        this.authService.setToken(res.token); // Stocke le token\n        this.router.navigate(['/dashboard']); // Redirige vers le dashboard\n      },\n\n      error: err => {\n        console.error(err);\n        this.errorMessage = err.error || 'Login failed';\n      }\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","LoginComponent","constructor","authService","router","email","motDePasse","errorMessage","login","subscribe","next","res","setToken","token","navigate","error","err","console","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\monta\\OneDrive\\Documents\\Projects\\todo-project-manager\\src\\app\\features\\auth\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  email: string = '';\n  motDePasse: string = '';\n  errorMessage: string = '';\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  login() {\n    if (!this.email || !this.motDePasse) {\n      this.errorMessage = 'Please fill in all fields';\n      return;\n    }\n\n    this.authService.login(this.email, this.motDePasse).subscribe({\n      next: (res) => {\n        this.authService.setToken(res.token); // Stocke le token\n        this.router.navigate(['/dashboard']); // Redirige vers le dashboard\n      },\n      error: (err) => {\n        console.error(err);\n        this.errorMessage = err.error || 'Login failed';\n      }\n    });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAKzBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAJ5D,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,UAAU,GAAW,EAAE;IACvB,KAAAC,YAAY,GAAW,EAAE;EAE+C;EAExEC,KAAKA,CAAA;IACH,IAAI,CAAC,IAAI,CAACH,KAAK,IAAI,CAAC,IAAI,CAACC,UAAU,EAAE;MACnC,IAAI,CAACC,YAAY,GAAG,2BAA2B;MAC/C;;IAGF,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC,IAAI,CAACH,KAAK,EAAE,IAAI,CAACC,UAAU,CAAC,CAACG,SAAS,CAAC;MAC5DC,IAAI,EAAGC,GAAG,IAAI;QACZ,IAAI,CAACR,WAAW,CAACS,QAAQ,CAACD,GAAG,CAACE,KAAK,CAAC,CAAC,CAAC;QACtC,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;MACxC,CAAC;;MACDC,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACF,KAAK,CAACC,GAAG,CAAC;QAClB,IAAI,CAACT,YAAY,GAAGS,GAAG,CAACD,KAAK,IAAI,cAAc;MACjD;KACD,CAAC;EACJ;CACD;AAxBYd,cAAc,GAAAiB,UAAA,EAL1BlB,SAAS,CAAC;EACTmB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWpB,cAAc,CAwB1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}