{"ast":null,"code":"import { Subject, forkJoin } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/dashboard.service\";\nimport * as i2 from \"../../../services/user.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../../shared/components/header-user/header-user.component\";\nfunction DashboardComponent_div_3_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r5.id)(\"disabled\", user_r5.role === \"admin\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", user_r5.nom, \" \", user_r5.prenom, \" - \", user_r5.email, \" \");\n  }\n}\nfunction DashboardComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"input\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_div_3_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.newProjectName = $event);\n    })(\"blur\", function DashboardComponent_div_3_Template_input_blur_1_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.validateForm());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"input\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_div_3_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.newProjectDescription = $event);\n    })(\"blur\", function DashboardComponent_div_3_Template_input_blur_2_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.validateForm());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 7);\n    i0.ɵɵlistener(\"input\", function DashboardComponent_div_3_Template_input_input_3_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onSearchUser($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"select\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_div_3_Template_select_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.assignedUserIds = $event);\n    });\n    i0.ɵɵtemplate(5, DashboardComponent_div_3_option_5_Template, 2, 5, \"option\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_3_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.addProject());\n    });\n    i0.ɵɵtext(7, \" Create Project \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"error\", ctx_r0.newProjectNameError);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newProjectName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"error\", ctx_r0.newProjectDescriptionError);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newProjectDescription);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.assignedUserIds);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.filteredUsers);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.isFormValid());\n  }\n}\nfunction DashboardComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \" Fields cannot be empty!\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \" Please select at least one user to assign the project.\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_7_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const project_r14 = i0.ɵɵnextContext().$implicit;\n    const ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Assigned to: \", ctx_r15.getAssignedUserNames(project_r14), \" \");\n  }\n}\nfunction DashboardComponent_div_7_li_12_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_7_li_12_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const task_r20 = i0.ɵɵnextContext().$implicit;\n      const project_r14 = i0.ɵɵnextContext().$implicit;\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.removeTask(project_r14, task_r20));\n    });\n    i0.ɵɵtext(1, \" \\u00D7 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_7_li_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"input\", 22);\n    i0.ɵɵlistener(\"change\", function DashboardComponent_div_7_li_12_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r27);\n      const task_r20 = restoredCtx.$implicit;\n      const project_r14 = i0.ɵɵnextContext().$implicit;\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.toggleTask(task_r20, project_r14));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, DashboardComponent_div_7_li_12_button_4_Template, 2, 0, \"button\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r20 = ctx.$implicit;\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", task_r20.done);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"text-decoration\", task_r20.done ? \"line-through\" : \"none\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r20.title, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r17.currentUser.role === \"admin\");\n  }\n}\nfunction DashboardComponent_div_7_button_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_7_button_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const project_r14 = i0.ɵɵnextContext().$implicit;\n      const ctx_r29 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r29.removeProject(project_r14));\n    });\n    i0.ɵɵtext(1, \" Delete Project \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, DashboardComponent_div_7_p_5_Template, 2, 1, \"p\", 14);\n    i0.ɵɵelementStart(6, \"div\", 15);\n    i0.ɵɵelement(7, \"input\", 16, 17);\n    i0.ɵɵelementStart(9, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_7_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r33);\n      const project_r14 = restoredCtx.$implicit;\n      const _r16 = i0.ɵɵreference(8);\n      const ctx_r32 = i0.ɵɵnextContext();\n      ctx_r32.addTask(project_r14, _r16.value);\n      return i0.ɵɵresetView(_r16.value = \"\");\n    });\n    i0.ɵɵtext(10, \" Add Task \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"ul\", 19);\n    i0.ɵɵtemplate(12, DashboardComponent_div_7_li_12_Template, 5, 5, \"li\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, DashboardComponent_div_7_button_13_Template, 2, 0, \"button\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const project_r14 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(project_r14.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(project_r14.description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.currentUser.role === \"admin\");\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", project_r14.tasks);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.currentUser.role === \"admin\");\n  }\n}\nexport class DashboardComponent {\n  constructor(dashboardService, userService, cd) {\n    this.dashboardService = dashboardService;\n    this.userService = userService;\n    this.cd = cd;\n    this.currentUser = {\n      id: 1,\n      nom: 'Admin',\n      prenom: 'Admin',\n      email: 'admin@example.com',\n      role: 'admin'\n    };\n    this.users = [];\n    this.filteredUsers = [];\n    this.projects = [];\n    // Formulaire projet\n    this.newProjectName = '';\n    this.newProjectDescription = '';\n    this.assignedUserIds = [];\n    this.newProjectNameError = false;\n    this.newProjectDescriptionError = false;\n    // Recherche utilisateur dynamique\n    this.searchTerm$ = new Subject();\n  }\n  ngOnInit() {\n    this.loadUsers();\n    this.searchTerm$.pipe(debounceTime(300), distinctUntilChanged()).subscribe(term => this.filterUsers(term));\n  }\n  loadUsers() {\n    this.userService.getAllUsers().subscribe(users => {\n      this.users = users.filter(u => u.role !== 'admin');\n      this.filteredUsers = [...this.users];\n      this.loadProjects();\n    });\n  }\n  loadProjects() {\n    if (this.currentUser.role === 'admin') {\n      const observables = this.users.map(u => this.dashboardService.getProjectsByUser(u.email));\n      if (observables.length > 0) {\n        forkJoin(observables).subscribe(results => {\n          this.projects = results.flat();\n          this.cd.detectChanges();\n        });\n      } else {\n        this.projects = [];\n      }\n    } else {\n      this.dashboardService.getProjectsByUser(this.currentUser.email).subscribe(projects => {\n        this.projects = projects;\n        this.cd.detectChanges();\n      });\n    }\n  }\n  isFormValid() {\n    const nameValid = !!this.newProjectName.trim();\n    const descValid = !!this.newProjectDescription.trim();\n    const usersValid = this.assignedUserIds.length > 0;\n    return nameValid && descValid && usersValid;\n  }\n  validateForm() {\n    this.newProjectNameError = !this.newProjectName.trim();\n    this.newProjectDescriptionError = !this.newProjectDescription.trim();\n  }\n  addProject() {\n    this.validateForm();\n    if (this.currentUser.role !== 'admin' || !this.isFormValid()) return;\n    const project = {\n      name: this.newProjectName.trim(),\n      description: this.newProjectDescription.trim(),\n      assignedTo: [...this.assignedUserIds],\n      tasks: []\n    };\n    const observables = this.assignedUserIds.map(userId => {\n      const user = this.users.find(u => u.id === userId);\n      if (user) return this.dashboardService.createProject(user.email, project);\n      return null;\n    }).filter(obs => obs !== null);\n    if (observables.length > 0) {\n      forkJoin(observables).subscribe(savedProjects => {\n        this.projects.push(...savedProjects);\n        this.cd.detectChanges();\n        this.resetForm();\n      });\n    }\n  }\n  resetForm() {\n    this.newProjectName = '';\n    this.newProjectDescription = '';\n    this.assignedUserIds = [];\n    this.newProjectNameError = false;\n    this.newProjectDescriptionError = false;\n  }\n  addTask(project, taskTitle) {\n    if (!taskTitle.trim()) return;\n    const task = {\n      title: taskTitle.trim(),\n      done: false\n    };\n    project.tasks.push(task);\n    if (project.id) this.dashboardService.updateProject(project.id, project).subscribe();\n  }\n  toggleTask(task, project) {\n    task.done = !task.done;\n    if (project.id) this.dashboardService.updateProject(project.id, project).subscribe();\n  }\n  removeTask(project, task) {\n    project.tasks = project.tasks.filter(t => t !== task);\n    if (project.id) this.dashboardService.updateProject(project.id, project).subscribe();\n  }\n  removeProject(project) {\n    if (this.currentUser.role !== 'admin' || !project.id) return;\n    this.dashboardService.deleteProject(project.id).subscribe(() => {\n      this.projects = this.projects.filter(p => p !== project);\n      this.cd.detectChanges();\n    });\n  }\n  getAssignedUserNames(project) {\n    return project.assignedTo.map(id => {\n      const user = this.users.find(u => u.id === id);\n      return user ? `${user.nom} ${user.prenom} (${user.email})` : '';\n    }).filter(name => !!name).join(', ');\n  }\n  onSearchUser(event) {\n    const target = event.target;\n    const term = target.value || '';\n    this.searchTerm$.next(term);\n  }\n  filterUsers(term) {\n    if (!term) {\n      this.filteredUsers = [...this.users];\n    } else {\n      this.filteredUsers = this.users.filter(u => u.nom.toLowerCase().includes(term.toLowerCase()) || u.prenom.toLowerCase().includes(term.toLowerCase()) || u.email.toLowerCase().includes(term.toLowerCase()));\n    }\n  }\n  get visibleProjects() {\n    if (this.currentUser.role === 'admin') return this.projects;\n    return this.projects.filter(p => p.assignedTo.includes(this.currentUser.id));\n  }\n  get hasFormErrors() {\n    return this.newProjectNameError || this.newProjectDescriptionError;\n  }\n  static {\n    this.ɵfac = function DashboardComponent_Factory(t) {\n      return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.DashboardService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardComponent,\n      selectors: [[\"app-dashboard\"]],\n      decls: 8,\n      vars: 4,\n      consts: [[\"class\", \"project-form\", 4, \"ngIf\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"project-list\"], [\"class\", \"project-card\", 4, \"ngFor\", \"ngForOf\"], [1, \"project-form\"], [\"placeholder\", \"Project Name\", 3, \"ngModel\", \"ngModelChange\", \"blur\"], [\"placeholder\", \"Description\", 3, \"ngModel\", \"ngModelChange\", \"blur\"], [\"type\", \"text\", \"placeholder\", \"Search user...\", 3, \"input\"], [\"multiple\", \"\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [3, \"disabled\", \"click\"], [3, \"value\", \"disabled\"], [1, \"error-message\"], [1, \"project-card\"], [4, \"ngIf\"], [1, \"task-form\"], [\"placeholder\", \"New Task\"], [\"taskInput\", \"\"], [3, \"click\"], [1, \"task-list\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"delete-btn\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"checkbox\", 3, \"checked\", \"change\"], [1, \"delete-btn\", 3, \"click\"]],\n      template: function DashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"app-header-user\");\n          i0.ɵɵelementStart(1, \"h2\");\n          i0.ɵɵtext(2, \"Dashboard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, DashboardComponent_div_3_Template, 8, 9, \"div\", 0);\n          i0.ɵɵtemplate(4, DashboardComponent_div_4_Template, 2, 0, \"div\", 1);\n          i0.ɵɵtemplate(5, DashboardComponent_div_5_Template, 2, 0, \"div\", 1);\n          i0.ɵɵelementStart(6, \"div\", 2);\n          i0.ɵɵtemplate(7, DashboardComponent_div_7_Template, 14, 5, \"div\", 3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.currentUser.role === \"admin\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.hasFormErrors);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.assignedUserIds.length === 0 && ctx.currentUser.role === \"admin\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.visibleProjects);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.NgIf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectMultipleControlValueAccessor, i4.NgControlStatus, i4.NgModel, i5.HeaderUserComponent],\n      styles: [\".dashboard-container[_ngcontent-%COMP%] {\\n  text-align: center;\\n  padding: 50px 20px;\\n  max-width: 1000px;\\n  margin: 0 auto;\\n}\\n\\n.dashboard-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  color: #1f2937;\\n  font-size: 2rem;\\n  margin-bottom: 20px;\\n}\\n\\n.project-form[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 10px;\\n  margin-bottom: 20px;\\n  justify-content: center;\\n}\\n\\n.project-form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  border: 2px solid #e5e7eb;\\n  border-radius: 5px;\\n  font-size: 1rem;\\n}\\n\\n.project-form[_ngcontent-%COMP%]   input.error[_ngcontent-%COMP%] {\\n  border-color: #dc2626;\\n}\\n\\n.project-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  padding: 10px 20px;\\n  background-color: #4b6cb7;\\n  color: white;\\n  border: none;\\n  border-radius: 5px;\\n  cursor: pointer;\\n  transition: background-color 0.3s;\\n}\\n\\n.project-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #3a558e;\\n}\\n\\n.error-message[_ngcontent-%COMP%] {\\n  color: #dc2626;\\n  font-size: 0.9rem;\\n  margin-top: 5px;\\n}\\n\\n.project-list[_ngcontent-%COMP%] {\\n  display: grid;\\n  gap: 20px;\\n}\\n\\n.project-card[_ngcontent-%COMP%] {\\n  background: #fff;\\n  padding: 20px;\\n  border-radius: 10px;\\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\\n  transition: transform 0.3s ease;\\n}\\n\\n.project-card[_ngcontent-%COMP%]:hover {\\n  transform: translateY(-5px);\\n}\\n\\n.task-form[_ngcontent-%COMP%] {\\n  margin: 10px 0;\\n  display: flex;\\n  gap: 10px;\\n}\\n\\n.task-form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  padding: 8px;\\n  border: 2px solid #e5e7eb;\\n  border-radius: 5px;\\n}\\n\\n.task-list[_ngcontent-%COMP%] {\\n  list-style: none;\\n  padding: 0;\\n  text-align: left;\\n}\\n\\n.task-item[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n  margin: 5px 0;\\n}\\n\\n.delete-btn[_ngcontent-%COMP%] {\\n  background: #dc2626;\\n  color: white;\\n  border: none;\\n  border-radius: 50%;\\n  width: 20px;\\n  height: 20px;\\n  cursor: pointer;\\n  font-size: 1rem;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.delete-btn[_ngcontent-%COMP%]:hover {\\n  background: #b91c1c;\\n}\\n\\n@media (max-width: 600px) {\\n  .project-form[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n  .task-form[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvZGFzaGJvYXJkL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsZUFBZTtFQUNmLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixTQUFTO0VBQ1QsbUJBQW1CO0VBQ25CLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLGFBQWE7RUFDYix5QkFBeUI7RUFDekIsa0JBQWtCO0VBQ2xCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZixpQ0FBaUM7QUFDbkM7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsaUJBQWlCO0VBQ2pCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsU0FBUztBQUNYOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIseUNBQXlDO0VBQ3pDLCtCQUErQjtBQUNqQzs7QUFFQTtFQUNFLDJCQUEyQjtBQUM3Qjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxhQUFhO0VBQ2IsU0FBUztBQUNYOztBQUVBO0VBQ0UsWUFBWTtFQUNaLHlCQUF5QjtFQUN6QixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsVUFBVTtFQUNWLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsU0FBUztFQUNULGFBQWE7QUFDZjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsWUFBWTtFQUNaLGVBQWU7RUFDZixlQUFlO0VBQ2YsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQix1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRTtJQUNFLHNCQUFzQjtFQUN4QjtFQUNBO0lBQ0Usc0JBQXNCO0VBQ3hCO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIuZGFzaGJvYXJkLWNvbnRhaW5lciB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHBhZGRpbmc6IDUwcHggMjBweDtcclxuICBtYXgtd2lkdGg6IDEwMDBweDtcclxuICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5cclxuLmRhc2hib2FyZC1jb250YWluZXIgaDIge1xyXG4gIGNvbG9yOiAjMWYyOTM3O1xyXG4gIGZvbnQtc2l6ZTogMnJlbTtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcblxyXG4ucHJvamVjdC1mb3JtIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGdhcDogMTBweDtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG4ucHJvamVjdC1mb3JtIGlucHV0IHtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIGJvcmRlcjogMnB4IHNvbGlkICNlNWU3ZWI7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGZvbnQtc2l6ZTogMXJlbTtcclxufVxyXG5cclxuLnByb2plY3QtZm9ybSBpbnB1dC5lcnJvciB7XHJcbiAgYm9yZGVyLWNvbG9yOiAjZGMyNjI2O1xyXG59XHJcblxyXG4ucHJvamVjdC1mb3JtIGJ1dHRvbiB7XHJcbiAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM0YjZjYjc7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcztcclxufVxyXG5cclxuLnByb2plY3QtZm9ybSBidXR0b246aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMzYTU1OGU7XHJcbn1cclxuXHJcbi5lcnJvci1tZXNzYWdlIHtcclxuICBjb2xvcjogI2RjMjYyNjtcclxuICBmb250LXNpemU6IDAuOXJlbTtcclxuICBtYXJnaW4tdG9wOiA1cHg7XHJcbn1cclxuXHJcbi5wcm9qZWN0LWxpc3Qge1xyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ2FwOiAyMHB4O1xyXG59XHJcblxyXG4ucHJvamVjdC1jYXJkIHtcclxuICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBib3gtc2hhZG93OiAwIDRweCAxMnB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlO1xyXG59XHJcblxyXG4ucHJvamVjdC1jYXJkOmhvdmVyIHtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTVweCk7XHJcbn1cclxuXHJcbi50YXNrLWZvcm0ge1xyXG4gIG1hcmdpbjogMTBweCAwO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZ2FwOiAxMHB4O1xyXG59XHJcblxyXG4udGFzay1mb3JtIGlucHV0IHtcclxuICBwYWRkaW5nOiA4cHg7XHJcbiAgYm9yZGVyOiAycHggc29saWQgI2U1ZTdlYjtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuXHJcbi50YXNrLWxpc3Qge1xyXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgcGFkZGluZzogMDtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcblxyXG4udGFzay1pdGVtIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgZ2FwOiAxMHB4O1xyXG4gIG1hcmdpbjogNXB4IDA7XHJcbn1cclxuXHJcbi5kZWxldGUtYnRuIHtcclxuICBiYWNrZ3JvdW5kOiAjZGMyNjI2O1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gIHdpZHRoOiAyMHB4O1xyXG4gIGhlaWdodDogMjBweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgZm9udC1zaXplOiAxcmVtO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuLmRlbGV0ZS1idG46aG92ZXIge1xyXG4gIGJhY2tncm91bmQ6ICNiOTFjMWM7XHJcbn1cclxuXHJcbkBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xyXG4gIC5wcm9qZWN0LWZvcm0ge1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICB9XHJcbiAgLnRhc2stZm9ybSB7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["Subject","forkJoin","debounceTime","distinctUntilChanged","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","user_r5","id","role","ɵɵadvance","ɵɵtextInterpolate3","nom","prenom","email","ɵɵlistener","DashboardComponent_div_3_Template_input_ngModelChange_1_listener","$event","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","newProjectName","DashboardComponent_div_3_Template_input_blur_1_listener","ctx_r8","validateForm","DashboardComponent_div_3_Template_input_ngModelChange_2_listener","ctx_r9","newProjectDescription","DashboardComponent_div_3_Template_input_blur_2_listener","ctx_r10","DashboardComponent_div_3_Template_input_input_3_listener","ctx_r11","onSearchUser","DashboardComponent_div_3_Template_select_ngModelChange_4_listener","ctx_r12","assignedUserIds","ɵɵtemplate","DashboardComponent_div_3_option_5_Template","DashboardComponent_div_3_Template_button_click_6_listener","ctx_r13","addProject","ɵɵclassProp","ctx_r0","newProjectNameError","newProjectDescriptionError","filteredUsers","isFormValid","ɵɵtextInterpolate1","ctx_r15","getAssignedUserNames","project_r14","DashboardComponent_div_7_li_12_button_4_Template_button_click_0_listener","_r24","task_r20","$implicit","ctx_r22","removeTask","DashboardComponent_div_7_li_12_Template_input_change_1_listener","restoredCtx","_r27","ctx_r26","toggleTask","DashboardComponent_div_7_li_12_button_4_Template","done","ɵɵstyleProp","title","ctx_r17","currentUser","DashboardComponent_div_7_button_13_Template_button_click_0_listener","_r31","ctx_r29","removeProject","DashboardComponent_div_7_p_5_Template","ɵɵelement","DashboardComponent_div_7_Template_button_click_9_listener","_r33","_r16","ɵɵreference","ctx_r32","addTask","value","DashboardComponent_div_7_li_12_Template","DashboardComponent_div_7_button_13_Template","ɵɵtextInterpolate","name","description","ctx_r3","tasks","DashboardComponent","constructor","dashboardService","userService","cd","users","projects","searchTerm$","ngOnInit","loadUsers","pipe","subscribe","term","filterUsers","getAllUsers","filter","u","loadProjects","observables","map","getProjectsByUser","length","results","flat","detectChanges","nameValid","trim","descValid","usersValid","project","assignedTo","userId","user","find","createProject","obs","savedProjects","push","resetForm","taskTitle","task","updateProject","t","deleteProject","p","join","event","target","next","toLowerCase","includes","visibleProjects","hasFormErrors","ɵɵdirectiveInject","i1","DashboardService","i2","UserService","ChangeDetectorRef","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","DashboardComponent_div_3_Template","DashboardComponent_div_4_Template","DashboardComponent_div_5_Template","DashboardComponent_div_7_Template"],"sources":["C:\\Users\\monta\\OneDrive\\Documents\\Projects\\todo-project-manager\\src\\app\\features\\dashboard\\dashboard\\dashboard.component.ts","C:\\Users\\monta\\OneDrive\\Documents\\Projects\\todo-project-manager\\src\\app\\features\\dashboard\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { DashboardService, Project, Task } from '../../../services/dashboard.service';\nimport { UserService, User } from '../../../services/user.service';\nimport { Subject, forkJoin } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  currentUser: User = { id: 1, nom: 'Admin', prenom: 'Admin', email: 'admin@example.com', role: 'admin' };\n\n  users: User[] = [];\n  filteredUsers: User[] = [];\n  projects: Project[] = [];\n\n  // Formulaire projet\n  newProjectName = '';\n  newProjectDescription = '';\n  assignedUserIds: number[] = [];\n  newProjectNameError = false;\n  newProjectDescriptionError = false;\n\n  // Recherche utilisateur dynamique\n  searchTerm$ = new Subject<string>();\n\n  constructor(\n    private dashboardService: DashboardService, \n    private userService: UserService,\n    private cd: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.loadUsers();\n\n    this.searchTerm$.pipe(\n      debounceTime(300),\n      distinctUntilChanged()\n    ).subscribe(term => this.filterUsers(term));\n  }\n\n  loadUsers() {\n    this.userService.getAllUsers().subscribe(users => {\n      this.users = users.filter(u => u.role !== 'admin');\n      this.filteredUsers = [...this.users];\n      this.loadProjects();\n    });\n  }\n\n  loadProjects() {\n    if (this.currentUser.role === 'admin') {\n      const observables = this.users.map(u => this.dashboardService.getProjectsByUser(u.email));\n      if (observables.length > 0) {\n        forkJoin(observables).subscribe(results => {\n          this.projects = results.flat();\n          this.cd.detectChanges();\n        });\n      } else {\n        this.projects = [];\n      }\n    } else {\n      this.dashboardService.getProjectsByUser(this.currentUser.email).subscribe(projects => {\n        this.projects = projects;\n        this.cd.detectChanges();\n      });\n    }\n  }\n\n  isFormValid(): boolean {\n    const nameValid = !!this.newProjectName.trim();\n    const descValid = !!this.newProjectDescription.trim();\n    const usersValid = this.assignedUserIds.length > 0;\n    return nameValid && descValid && usersValid;\n  }\n\n  validateForm() {\n    this.newProjectNameError = !this.newProjectName.trim();\n    this.newProjectDescriptionError = !this.newProjectDescription.trim();\n  }\n\n  addProject() {\n    this.validateForm();\n    if (this.currentUser.role !== 'admin' || !this.isFormValid()) return;\n\n    const project: Project = {\n      name: this.newProjectName.trim(),\n      description: this.newProjectDescription.trim(),\n      assignedTo: [...this.assignedUserIds],\n      tasks: []\n    };\n\n    const observables = this.assignedUserIds.map(userId => {\n      const user = this.users.find(u => u.id === userId);\n      if (user) return this.dashboardService.createProject(user.email, project);\n      return null;\n    }).filter(obs => obs !== null) as any[];\n\n    if (observables.length > 0) {\n      forkJoin(observables).subscribe(savedProjects => {\n        this.projects.push(...savedProjects);\n        this.cd.detectChanges();\n        this.resetForm();\n      });\n    }\n  }\n\n  resetForm() {\n    this.newProjectName = '';\n    this.newProjectDescription = '';\n    this.assignedUserIds = [];\n    this.newProjectNameError = false;\n    this.newProjectDescriptionError = false;\n  }\n\n  addTask(project: Project, taskTitle: string) {\n    if (!taskTitle.trim()) return;\n    const task: Task = { title: taskTitle.trim(), done: false };\n    project.tasks.push(task);\n\n    if (project.id) this.dashboardService.updateProject(project.id, project).subscribe();\n  }\n\n  toggleTask(task: Task, project: Project) {\n    task.done = !task.done;\n    if (project.id) this.dashboardService.updateProject(project.id, project).subscribe();\n  }\n\n  removeTask(project: Project, task: Task) {\n    project.tasks = project.tasks.filter(t => t !== task);\n    if (project.id) this.dashboardService.updateProject(project.id, project).subscribe();\n  }\n\n  removeProject(project: Project) {\n    if (this.currentUser.role !== 'admin' || !project.id) return;\n\n    this.dashboardService.deleteProject(project.id).subscribe(() => {\n      this.projects = this.projects.filter(p => p !== project);\n      this.cd.detectChanges();\n    });\n  }\n\n  getAssignedUserNames(project: Project): string {\n    return project.assignedTo\n      .map(id => {\n        const user = this.users.find(u => u.id === id);\n        return user ? `${user.nom} ${user.prenom} (${user.email})` : '';\n      })\n      .filter(name => !!name)\n      .join(', ');\n  }\n\n  onSearchUser(event: Event) {\n    const target = event.target as HTMLInputElement;\n    const term = target.value || '';\n    this.searchTerm$.next(term);\n  }\n\n  filterUsers(term: string) {\n    if (!term) {\n      this.filteredUsers = [...this.users];\n    } else {\n      this.filteredUsers = this.users.filter(u =>\n        u.nom.toLowerCase().includes(term.toLowerCase()) ||\n        u.prenom.toLowerCase().includes(term.toLowerCase()) ||\n        u.email.toLowerCase().includes(term.toLowerCase())\n      );\n    }\n  }\n\n  get visibleProjects(): Project[] {\n    if (this.currentUser.role === 'admin') return this.projects;\n    return this.projects.filter(p => p.assignedTo.includes(this.currentUser.id!));\n  }\n\n  get hasFormErrors(): boolean {\n    return this.newProjectNameError || this.newProjectDescriptionError;\n  }\n}\n","<app-header-user></app-header-user>\n\n<h2>Dashboard</h2>\n\n<div *ngIf=\"currentUser.role==='admin'\" class=\"project-form\">\n  <input \n    [(ngModel)]=\"newProjectName\" \n    placeholder=\"Project Name\" \n    [class.error]=\"newProjectNameError\"\n    (blur)=\"validateForm()\" />\n    \n  <input \n    [(ngModel)]=\"newProjectDescription\" \n    placeholder=\"Description\" \n    [class.error]=\"newProjectDescriptionError\"\n    (blur)=\"validateForm()\" />\n   \n  <input \n    type=\"text\" \n    placeholder=\"Search user...\" \n    (input)=\"onSearchUser($event)\" />\n   \n  <select multiple [(ngModel)]=\"assignedUserIds\">\n    <option \n      *ngFor=\"let user of filteredUsers\" \n      [value]=\"user.id\" \n      [disabled]=\"user.role==='admin'\">\n      {{ user.nom }} {{ user.prenom }} - {{ user.email }}\n    </option>\n  </select>\n   \n  <button \n    (click)=\"addProject()\" \n    [disabled]=\"!isFormValid()\">\n    Create Project\n  </button>\n</div>\n\n<div class=\"error-message\" *ngIf=\"hasFormErrors\">\n  Fields cannot be empty!\n</div>\n\n<div class=\"error-message\" *ngIf=\"assignedUserIds.length === 0 && currentUser.role === 'admin'\">\n  Please select at least one user to assign the project.\n</div>\n\n<div class=\"project-list\">\n  <div *ngFor=\"let project of visibleProjects\" class=\"project-card\">\n    <h3>{{ project.name }}</h3>\n    <p>{{ project.description }}</p>\n     \n    <p *ngIf=\"currentUser.role==='admin'\">\n      Assigned to: {{ getAssignedUserNames(project) }}\n    </p>\n     \n    <div class=\"task-form\">\n      <input #taskInput placeholder=\"New Task\" />\n      <button (click)=\"addTask(project, taskInput.value); taskInput.value=''\">\n        Add Task\n      </button>\n    </div>\n     \n    <ul class=\"task-list\">\n      <li *ngFor=\"let task of project.tasks\">\n        <input \n          type=\"checkbox\" \n          [checked]=\"task.done\" \n          (change)=\"toggleTask(task, project)\" />\n        <span [style.text-decoration]=\"task.done ? 'line-through' : 'none'\">\n          {{ task.title }}\n        </span>\n        <button \n          *ngIf=\"currentUser.role==='admin'\" \n          (click)=\"removeTask(project, task)\" \n          class=\"delete-btn\">\n          ×\n        </button>\n      </li>\n    </ul>\n     \n    <button \n      *ngIf=\"currentUser.role==='admin'\" \n      (click)=\"removeProject(project)\" \n      class=\"delete-btn\">\n      Delete Project\n    </button>\n  </div>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}