{"ast":null,"code":"import * as i0 from \"@angular/core\";\nfunction DashboardClientComponent_div_3_span_8_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \", \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardClientComponent_div_3_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, DashboardClientComponent_div_3_span_8_span_2_Template, 2, 0, \"span\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const userId_r5 = ctx.$implicit;\n    const last_r6 = ctx.last;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.getUserName(userId_r5), \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !last_r6);\n  }\n}\nfunction DashboardClientComponent_div_3_li_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"input\", 9);\n    i0.ɵɵlistener(\"change\", function DashboardClientComponent_div_3_li_15_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const task_r8 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.toggleTask(task_r8));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", task_r8.done);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"completed\", task_r8.done);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r8.title);\n  }\n}\nfunction DashboardClientComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\")(6, \"strong\");\n    i0.ɵɵtext(7, \"Assign\\u00E9 \\u00E0:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, DashboardClientComponent_div_3_span_8_Template, 3, 2, \"span\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 4);\n    i0.ɵɵelement(10, \"input\", 5, 6);\n    i0.ɵɵelementStart(12, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function DashboardClientComponent_div_3_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const project_r1 = restoredCtx.$implicit;\n      const _r3 = i0.ɵɵreference(11);\n      const ctx_r11 = i0.ɵɵnextContext();\n      ctx_r11.addTask(project_r1, _r3.value);\n      return i0.ɵɵresetView(_r3.value = \"\");\n    });\n    i0.ɵɵtext(13, \"Ajouter T\\u00E2che\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"ul\");\n    i0.ɵɵtemplate(15, DashboardClientComponent_div_3_li_15_Template, 4, 4, \"li\", 3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const project_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(project_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(project_r1.description);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", project_r1.assignedTo);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", project_r1.tasks);\n  }\n}\nexport class DashboardClientComponent {\n  constructor() {\n    this.currentUser = {\n      id: 1,\n      name: 'Hazem Kammoun',\n      role: 'client'\n    };\n    this.users = [{\n      id: 1,\n      name: 'Hazem Kammoun',\n      role: 'client'\n    }, {\n      id: 2,\n      name: 'Alice Dupont',\n      role: 'client'\n    }, {\n      id: 3,\n      name: 'Admin User',\n      role: 'admin'\n    }];\n    this.projects = [{\n      id: 1,\n      name: 'Projet Alpha',\n      description: 'Description du projet Alpha',\n      assignedTo: [1, 2],\n      tasks: [{\n        id: 1,\n        title: 'Tâche 1',\n        done: false\n      }, {\n        id: 2,\n        title: 'Tâche 2',\n        done: true\n      }]\n    }, {\n      id: 2,\n      name: 'Projet Beta',\n      description: 'Description du projet Beta',\n      assignedTo: [1],\n      tasks: [{\n        id: 3,\n        title: 'Tâche 3',\n        done: false\n      }]\n    }];\n  }\n  addTask(project, title) {\n    if (!title.trim()) return;\n    const newTask = {\n      id: Date.now(),\n      title,\n      done: false\n    };\n    project.tasks.push(newTask);\n  }\n  toggleTask(task) {\n    task.done = !task.done;\n  }\n  getUserName(userId) {\n    const user = this.users.find(u => u.id === userId);\n    return user ? user.name : 'Utilisateur inconnu';\n  }\n  static {\n    this.ɵfac = function DashboardClientComponent_Factory(t) {\n      return new (t || DashboardClientComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardClientComponent,\n      selectors: [[\"app-dashboard-client\"]],\n      decls: 4,\n      vars: 2,\n      consts: [[1, \"dashboard\"], [\"class\", \"projects\", 4, \"ngFor\", \"ngForOf\"], [1, \"projects\"], [4, \"ngFor\", \"ngForOf\"], [1, \"add-task\"], [\"type\", \"text\", \"placeholder\", \"Nouvelle t\\u00E2che\"], [\"taskTitle\", \"\"], [3, \"click\"], [4, \"ngIf\"], [\"type\", \"checkbox\", 3, \"checked\", \"change\"]],\n      template: function DashboardClientComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, DashboardClientComponent_div_3_Template, 16, 4, \"div\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"Bonjour, \", ctx.currentUser.name, \"\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.projects);\n        }\n      },\n      styles: [\".dashboard[_ngcontent-%COMP%] {\\n  max-width: 800px;\\n  margin: 20px auto;\\n  padding: 20px;\\n  background: #f4f6f8;\\n  border-radius: 10px;\\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\\n  font-family: Arial, sans-serif;\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  color: #333;\\n  margin-bottom: 30px;\\n}\\n\\n.projects[_ngcontent-%COMP%] {\\n  margin-bottom: 30px;\\n  padding: 15px;\\n  background: white;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\\n}\\n\\n.projects[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  margin-bottom: 5px;\\n  color: #555;\\n}\\n\\n.projects[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  margin: 5px 0;\\n  color: #666;\\n}\\n\\n.add-task[_ngcontent-%COMP%] {\\n  display: flex;\\n  margin-bottom: 10px;\\n}\\n\\n.add-task[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  flex: 1;\\n  padding: 6px;\\n  border-radius: 5px;\\n  border: 1px solid #ccc;\\n  margin-right: 10px;\\n}\\n\\n.add-task[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  padding: 6px 12px;\\n  border: none;\\n  background-color: #007bff;\\n  color: white;\\n  border-radius: 5px;\\n  cursor: pointer;\\n}\\n\\n.add-task[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #0056b3;\\n}\\n\\nul[_ngcontent-%COMP%] {\\n  list-style: none;\\n  padding-left: 0;\\n}\\n\\nli[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  margin-bottom: 5px;\\n}\\n\\nli[_ngcontent-%COMP%]   input[type=\\\"checkbox\\\"][_ngcontent-%COMP%] {\\n  margin-right: 10px;\\n}\\n\\n.completed[_ngcontent-%COMP%] {\\n  text-decoration: line-through;\\n  color: gray;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvZGFzaGJvYXJkL2Rhc2hib2FyZC1jbGllbnQvZGFzaGJvYXJkLWNsaWVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLG1CQUFtQjtFQUNuQixxQ0FBcUM7RUFDckMsOEJBQThCO0FBQ2hDOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsYUFBYTtFQUNiLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsc0NBQXNDO0FBQ3hDOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGFBQWE7RUFDYixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsT0FBTztFQUNQLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsc0JBQXNCO0VBQ3RCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1oseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSw2QkFBNkI7RUFDN0IsV0FBVztBQUNiIiwic291cmNlc0NvbnRlbnQiOlsiLmRhc2hib2FyZCB7XHJcbiAgbWF4LXdpZHRoOiA4MDBweDtcclxuICBtYXJnaW46IDIwcHggYXV0bztcclxuICBwYWRkaW5nOiAyMHB4O1xyXG4gIGJhY2tncm91bmQ6ICNmNGY2Zjg7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLDAsMCwwLjEpO1xyXG4gIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjtcclxufVxyXG5cclxuaDIge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBjb2xvcjogIzMzMztcclxuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG59XHJcblxyXG4ucHJvamVjdHMge1xyXG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbiAgcGFkZGluZzogMTVweDtcclxuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwwLDAsMC4wNSk7XHJcbn1cclxuXHJcbi5wcm9qZWN0cyBoMyB7XHJcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gIGNvbG9yOiAjNTU1O1xyXG59XHJcblxyXG4ucHJvamVjdHMgcCB7XHJcbiAgbWFyZ2luOiA1cHggMDtcclxuICBjb2xvcjogIzY2NjtcclxufVxyXG5cclxuLmFkZC10YXNrIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbn1cclxuXHJcbi5hZGQtdGFzayBpbnB1dCB7XHJcbiAgZmxleDogMTtcclxuICBwYWRkaW5nOiA2cHg7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG59XHJcblxyXG4uYWRkLXRhc2sgYnV0dG9uIHtcclxuICBwYWRkaW5nOiA2cHggMTJweDtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLmFkZC10YXNrIGJ1dHRvbjpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwNTZiMztcclxufVxyXG5cclxudWwge1xyXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgcGFkZGluZy1sZWZ0OiAwO1xyXG59XHJcblxyXG5saSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIG1hcmdpbi1ib3R0b206IDVweDtcclxufVxyXG5cclxubGkgaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdIHtcclxuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbn1cclxuXHJcbi5jb21wbGV0ZWQge1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xyXG4gIGNvbG9yOiBncmF5O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","DashboardClientComponent_div_3_span_8_span_2_Template","ɵɵadvance","ɵɵtextInterpolate1","ctx_r2","getUserName","userId_r5","ɵɵproperty","last_r6","ɵɵlistener","DashboardClientComponent_div_3_li_15_Template_input_change_1_listener","restoredCtx","ɵɵrestoreView","_r10","task_r8","$implicit","ctx_r9","ɵɵnextContext","ɵɵresetView","toggleTask","done","ɵɵclassProp","ɵɵtextInterpolate","title","DashboardClientComponent_div_3_span_8_Template","ɵɵelement","DashboardClientComponent_div_3_Template_button_click_12_listener","_r12","project_r1","_r3","ɵɵreference","ctx_r11","addTask","value","DashboardClientComponent_div_3_li_15_Template","name","description","assignedTo","tasks","DashboardClientComponent","constructor","currentUser","id","role","users","projects","project","trim","newTask","Date","now","push","task","userId","user","find","u","selectors","decls","vars","consts","template","DashboardClientComponent_Template","rf","ctx","DashboardClientComponent_div_3_Template"],"sources":["C:\\Users\\monta\\OneDrive\\Documents\\Projects\\todo-project-manager\\src\\app\\features\\dashboard\\dashboard-client\\dashboard-client.component.ts","C:\\Users\\monta\\OneDrive\\Documents\\Projects\\todo-project-manager\\src\\app\\features\\dashboard\\dashboard-client\\dashboard-client.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Project, Task, User } from '../dashboard.model';\n\n@Component({\n  selector: 'app-dashboard-client',\n  templateUrl: './dashboard-client.component.html',\n  styleUrls: ['./dashboard-client.component.css']\n})\nexport class DashboardClientComponent {\n  currentUser: User = { id: 1, name: 'Hazem Kammoun', role: 'client' };\n\n  users: User[] = [\n    { id: 1, name: 'Hazem Kammoun', role: 'client' },\n    { id: 2, name: 'Alice Dupont', role: 'client' },\n    { id: 3, name: 'Admin User', role: 'admin' }\n  ];\n\n  projects: Project[] = [\n    {\n      id: 1,\n      name: 'Projet Alpha',\n      description: 'Description du projet Alpha',\n      assignedTo: [1, 2],\n      tasks: [\n        { id: 1, title: 'Tâche 1', done: false },\n        { id: 2, title: 'Tâche 2', done: true }\n      ]\n    },\n    {\n      id: 2,\n      name: 'Projet Beta',\n      description: 'Description du projet Beta',\n      assignedTo: [1],\n      tasks: [\n        { id: 3, title: 'Tâche 3', done: false }\n      ]\n    }\n  ];\n\n  addTask(project: Project, title: string) {\n    if (!title.trim()) return;\n    const newTask: Task = { id: Date.now(), title, done: false };\n    project.tasks.push(newTask);\n  }\n\n  toggleTask(task: Task) {\n    task.done = !task.done;\n  }\n\n  getUserName(userId: number): string {\n    const user = this.users.find(u => u.id === userId);\n    return user ? user.name : 'Utilisateur inconnu';\n  }\n}\n","<div class=\"dashboard\">\n  <h2>Bonjour, {{ currentUser.name }}</h2>\n\n  <div class=\"projects\" *ngFor=\"let project of projects\">\n    <h3>{{ project.name }}</h3>\n    <p>{{ project.description }}</p>\n    <p><strong>Assigné à:</strong> \n      <span *ngFor=\"let userId of project.assignedTo; let last=last\">\n        {{ getUserName(userId) }}<span *ngIf=\"!last\">, </span>\n      </span>\n    </p>\n\n    <div class=\"add-task\">\n      <input #taskTitle type=\"text\" placeholder=\"Nouvelle tâche\" />\n      <button (click)=\"addTask(project, taskTitle.value); taskTitle.value=''\">Ajouter Tâche</button>\n    </div>\n\n    <ul>\n      <li *ngFor=\"let task of project.tasks\">\n        <input type=\"checkbox\" [checked]=\"task.done\" (change)=\"toggleTask(task)\" />\n        <span [class.completed]=\"task.done\">{{ task.title }}</span>\n      </li>\n    </ul>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}