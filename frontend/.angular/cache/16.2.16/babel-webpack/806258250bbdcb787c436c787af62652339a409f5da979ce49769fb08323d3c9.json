{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let DashboardAdminComponent = class DashboardAdminComponent {\n  constructor() {\n    this.users = [{\n      id: 1,\n      name: 'Admin',\n      role: 'admin'\n    }, {\n      id: 2,\n      name: 'Client1',\n      role: 'client'\n    }, {\n      id: 3,\n      name: 'Client2',\n      role: 'client'\n    }];\n    this.projects = [];\n    this.nextProjectId = 1;\n    this.nextTaskId = 1;\n    this.newProjectName = '';\n    this.newProjectDescription = '';\n    this.assignedUserIds = [];\n    this.newProjectNameError = false;\n    this.newProjectDescriptionError = false;\n  }\n  ngOnInit() {}\n  isFormValid() {\n    this.newProjectNameError = !this.newProjectName.trim();\n    this.newProjectDescriptionError = !this.newProjectDescription.trim();\n    return !this.newProjectNameError && !this.newProjectDescriptionError;\n  }\n  addProject() {\n    if (!this.isFormValid()) return;\n    const project = {\n      id: this.nextProjectId++,\n      name: this.newProjectName.trim(),\n      description: this.newProjectDescription.trim(),\n      assignedTo: [...this.assignedUserIds],\n      tasks: []\n    };\n    this.projects.push(project);\n    this.newProjectName = '';\n    this.newProjectDescription = '';\n    this.assignedUserIds = [];\n  }\n  addTask(project, taskTitle) {\n    if (!taskTitle.trim()) return;\n    const task = {\n      id: this.nextTaskId++,\n      title: taskTitle.trim(),\n      done: false\n    };\n    project.tasks.push(task);\n  }\n  toggleTask(task) {\n    task.done = !task.done;\n  }\n  removeTask(project, task) {\n    project.tasks = project.tasks.filter(t => t.id !== task.id);\n  }\n  removeProject(project) {\n    this.projects = this.projects.filter(p => p.id !== project.id);\n  }\n};\nDashboardAdminComponent = __decorate([Component({\n  selector: 'app-dashboard-admin',\n  templateUrl: './dashboard-admin.component.html',\n  styleUrls: ['./dashboard-admin.component.css']\n})], DashboardAdminComponent);","map":{"version":3,"names":["Component","DashboardAdminComponent","constructor","users","id","name","role","projects","nextProjectId","nextTaskId","newProjectName","newProjectDescription","assignedUserIds","newProjectNameError","newProjectDescriptionError","ngOnInit","isFormValid","trim","addProject","project","description","assignedTo","tasks","push","addTask","taskTitle","task","title","done","toggleTask","removeTask","filter","t","removeProject","p","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\monta\\OneDrive\\Documents\\Projects\\todo-project-manager\\src\\app\\features\\dashboard\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { User, Project, Task } from '../dashboard.model';\n\n@Component({\n  selector: 'app-dashboard-admin',\n  templateUrl: './dashboard-admin.component.html',\n  styleUrls: ['./dashboard-admin.component.css'],\n})\nexport class DashboardAdminComponent implements OnInit {\n  users: User[] = [\n    { id: 1, name: 'Admin', role: 'admin' },\n    { id: 2, name: 'Client1', role: 'client' },\n    { id: 3, name: 'Client2', role: 'client' },\n  ];\n\n  projects: Project[] = [];\n  nextProjectId = 1;\n  nextTaskId = 1;\n\n  newProjectName = '';\n  newProjectDescription = '';\n  assignedUserIds: number[] = [];\n\n  newProjectNameError = false;\n  newProjectDescriptionError = false;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  isFormValid(): boolean {\n    this.newProjectNameError = !this.newProjectName.trim();\n    this.newProjectDescriptionError = !this.newProjectDescription.trim();\n    return !this.newProjectNameError && !this.newProjectDescriptionError;\n  }\n\n  addProject() {\n    if (!this.isFormValid()) return;\n    const project: Project = {\n      id: this.nextProjectId++,\n      name: this.newProjectName.trim(),\n      description: this.newProjectDescription.trim(),\n      assignedTo: [...this.assignedUserIds],\n      tasks: [],\n    };\n    this.projects.push(project);\n    this.newProjectName = '';\n    this.newProjectDescription = '';\n    this.assignedUserIds = [];\n  }\n\n  addTask(project: Project, taskTitle: string) {\n    if (!taskTitle.trim()) return;\n    const task: Task = { id: this.nextTaskId++, title: taskTitle.trim(), done: false };\n    project.tasks.push(task);\n  }\n\n  toggleTask(task: Task) {\n    task.done = !task.done;\n  }\n\n  removeTask(project: Project, task: Task) {\n    project.tasks = project.tasks.filter(t => t.id !== task.id);\n  }\n\n  removeProject(project: Project) {\n    this.projects = this.projects.filter(p => p.id !== project.id);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}