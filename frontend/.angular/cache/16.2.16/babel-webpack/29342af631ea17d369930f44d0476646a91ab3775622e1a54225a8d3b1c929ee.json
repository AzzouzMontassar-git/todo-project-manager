{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/dashboard-client.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../../header-client/header-client.component\";\nfunction DashboardClientComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"p\");\n    i0.ɵɵtext(2, \"Aucun projet ne vous est assign\\u00E9.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction DashboardClientComponent_div_5_span_8_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \", \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardClientComponent_div_5_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, DashboardClientComponent_div_5_span_8_span_2_Template, 2, 0, \"span\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const userId_r6 = ctx.$implicit;\n    const last_r7 = ctx.last;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.getUserName(userId_r6), \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !last_r7);\n  }\n}\nfunction DashboardClientComponent_div_5_li_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"input\", 11);\n    i0.ɵɵlistener(\"change\", function DashboardClientComponent_div_5_li_15_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const task_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.toggleTask(task_r9));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", task_r9.done);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"completed\", task_r9.done);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r9.title);\n  }\n}\nfunction DashboardClientComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\")(6, \"strong\");\n    i0.ɵɵtext(7, \"Assign\\u00E9 \\u00E0:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, DashboardClientComponent_div_5_span_8_Template, 3, 2, \"span\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 6);\n    i0.ɵɵelement(10, \"input\", 7, 8);\n    i0.ɵɵelementStart(12, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function DashboardClientComponent_div_5_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const project_r2 = restoredCtx.$implicit;\n      const _r4 = i0.ɵɵreference(11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      ctx_r12.addTask(project_r2, _r4.value);\n      return i0.ɵɵresetView(_r4.value = \"\");\n    });\n    i0.ɵɵtext(13, \"Ajouter T\\u00E2che\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"ul\");\n    i0.ɵɵtemplate(15, DashboardClientComponent_div_5_li_15_Template, 4, 4, \"li\", 5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const project_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(project_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(project_r2.description);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", project_r2.assignedTo);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", project_r2.tasks);\n  }\n}\nexport class DashboardClientComponent {\n  constructor(dashboardClientService) {\n    this.dashboardClientService = dashboardClientService;\n    this.currentUser = null; // utilisateur connecté\n    this.projects = [];\n    this.users = [];\n    this.loadingProjects = true;\n    this.loadingUsers = true;\n    this.errorMessage = '';\n  }\n  ngOnInit() {\n    // Récupérer l'utilisateur connecté depuis le localStorage\n    const userData = localStorage.getItem('currentUser');\n    if (userData) {\n      this.currentUser = JSON.parse(userData);\n    } else {\n      console.error('Aucun utilisateur connecté trouvé dans localStorage.');\n      this.errorMessage = \"Vous n'êtes pas connecté.\";\n      this.loadingProjects = false;\n      this.loadingUsers = false;\n      return;\n    }\n    // Vérifier que l'email existe\n    if (!this.currentUser.email) {\n      console.error('Email de l’utilisateur manquant.');\n      this.errorMessage = \"Email utilisateur manquant.\";\n      this.loadingProjects = false;\n      this.loadingUsers = false;\n      return;\n    }\n    // Charger les projets assignés à l'utilisateur\n    this.dashboardClientService.getProjectsByUserEmail(this.currentUser.email).subscribe({\n      next: projects => {\n        this.projects = projects;\n        this.loadingProjects = false;\n      },\n      error: err => {\n        console.error('Erreur lors du chargement des projets :', err);\n        this.errorMessage = \"Impossible de charger les projets.\";\n        this.loadingProjects = false;\n      }\n    });\n    // Charger tous les utilisateurs pour les noms dans \"Assigné à\"\n    this.dashboardClientService.getAllUsers().subscribe({\n      next: users => {\n        this.users = users;\n        this.loadingUsers = false;\n      },\n      error: err => {\n        console.error('Erreur lors du chargement des utilisateurs :', err);\n        this.errorMessage = \"Impossible de charger les utilisateurs.\";\n        this.loadingUsers = false;\n      }\n    });\n  }\n  addTask(project, title) {\n    if (!title.trim()) return;\n    if (!project.id) {\n      console.error('ID du projet manquant pour ajouter une tâche.');\n      return;\n    }\n    const newTask = {\n      title,\n      done: false\n    };\n    this.dashboardClientService.addTaskToProject(project.id, newTask).subscribe({\n      next: savedTask => {\n        if (!project.tasks) project.tasks = [];\n        project.tasks.push(savedTask);\n      },\n      error: err => console.error('Erreur ajout tâche :', err)\n    });\n  }\n  toggleTask(task) {\n    if (!task.id) {\n      console.error('ID de la tâche manquant pour toggle.');\n      return;\n    }\n    this.dashboardClientService.toggleTaskStatus(task.id).subscribe({\n      next: updatedTask => {\n        task.done = updatedTask.done;\n      },\n      error: err => console.error('Erreur toggle tâche :', err)\n    });\n  }\n  getUserName(userId) {\n    const user = this.users.find(u => u.id === userId);\n    return user ? user.name : 'Utilisateur inconnu';\n  }\n  static {\n    this.ɵfac = function DashboardClientComponent_Factory(t) {\n      return new (t || DashboardClientComponent)(i0.ɵɵdirectiveInject(i1.DashboardClientService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardClientComponent,\n      selectors: [[\"app-dashboard-client\"]],\n      decls: 6,\n      vars: 3,\n      consts: [[1, \"dashboard\"], [\"class\", \"no-projects\", 4, \"ngIf\"], [\"class\", \"projects\", 4, \"ngFor\", \"ngForOf\"], [1, \"no-projects\"], [1, \"projects\"], [4, \"ngFor\", \"ngForOf\"], [1, \"add-task\"], [\"type\", \"text\", \"placeholder\", \"Nouvelle t\\u00E2che\"], [\"taskTitle\", \"\"], [3, \"click\"], [4, \"ngIf\"], [\"type\", \"checkbox\", 3, \"checked\", \"change\"]],\n      template: function DashboardClientComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"app-header-client\");\n          i0.ɵɵelementStart(1, \"div\", 0)(2, \"h2\");\n          i0.ɵɵtext(3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(4, DashboardClientComponent_div_4_Template, 3, 0, \"div\", 1);\n          i0.ɵɵtemplate(5, DashboardClientComponent_div_5_Template, 16, 4, \"div\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\"Bonjour, \", ctx.currentUser.name, \"\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.projects.length === 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.projects);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.HeaderClientComponent],\n      styles: [\".dashboard[_ngcontent-%COMP%] {\\n  max-width: 800px;\\n  margin: 20px auto;\\n  padding: 20px;\\n  background: #f4f6f8;\\n  border-radius: 10px;\\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\\n  font-family: Arial, sans-serif;\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  color: #333;\\n  margin-bottom: 30px;\\n}\\n\\n.projects[_ngcontent-%COMP%] {\\n  margin-bottom: 30px;\\n  padding: 15px;\\n  background: white;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\\n}\\n\\n.projects[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  margin-bottom: 5px;\\n  color: #555;\\n}\\n\\n.projects[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  margin: 5px 0;\\n  color: #666;\\n}\\n\\n.add-task[_ngcontent-%COMP%] {\\n  display: flex;\\n  margin-bottom: 10px;\\n}\\n\\n.add-task[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  flex: 1;\\n  padding: 6px;\\n  border-radius: 5px;\\n  border: 1px solid #ccc;\\n  margin-right: 10px;\\n}\\n\\n.add-task[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  padding: 6px 12px;\\n  border: none;\\n  background-color: #007bff;\\n  color: white;\\n  border-radius: 5px;\\n  cursor: pointer;\\n}\\n\\n.add-task[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #0056b3;\\n}\\n\\nul[_ngcontent-%COMP%] {\\n  list-style: none;\\n  padding-left: 0;\\n}\\n\\nli[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  margin-bottom: 5px;\\n}\\n\\nli[_ngcontent-%COMP%]   input[type=\\\"checkbox\\\"][_ngcontent-%COMP%] {\\n  margin-right: 10px;\\n}\\n\\n.completed[_ngcontent-%COMP%] {\\n  text-decoration: line-through;\\n  color: gray;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvZGFzaGJvYXJkL2Rhc2hib2FyZC1jbGllbnQvZGFzaGJvYXJkLWNsaWVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLG1CQUFtQjtFQUNuQixxQ0FBcUM7RUFDckMsOEJBQThCO0FBQ2hDOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsYUFBYTtFQUNiLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsc0NBQXNDO0FBQ3hDOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGFBQWE7RUFDYixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsT0FBTztFQUNQLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsc0JBQXNCO0VBQ3RCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1oseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSw2QkFBNkI7RUFDN0IsV0FBVztBQUNiIiwic291cmNlc0NvbnRlbnQiOlsiLmRhc2hib2FyZCB7XHJcbiAgbWF4LXdpZHRoOiA4MDBweDtcclxuICBtYXJnaW46IDIwcHggYXV0bztcclxuICBwYWRkaW5nOiAyMHB4O1xyXG4gIGJhY2tncm91bmQ6ICNmNGY2Zjg7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLDAsMCwwLjEpO1xyXG4gIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjtcclxufVxyXG5cclxuaDIge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBjb2xvcjogIzMzMztcclxuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG59XHJcblxyXG4ucHJvamVjdHMge1xyXG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbiAgcGFkZGluZzogMTVweDtcclxuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwwLDAsMC4wNSk7XHJcbn1cclxuXHJcbi5wcm9qZWN0cyBoMyB7XHJcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gIGNvbG9yOiAjNTU1O1xyXG59XHJcblxyXG4ucHJvamVjdHMgcCB7XHJcbiAgbWFyZ2luOiA1cHggMDtcclxuICBjb2xvcjogIzY2NjtcclxufVxyXG5cclxuLmFkZC10YXNrIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbn1cclxuXHJcbi5hZGQtdGFzayBpbnB1dCB7XHJcbiAgZmxleDogMTtcclxuICBwYWRkaW5nOiA2cHg7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG59XHJcblxyXG4uYWRkLXRhc2sgYnV0dG9uIHtcclxuICBwYWRkaW5nOiA2cHggMTJweDtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLmFkZC10YXNrIGJ1dHRvbjpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwNTZiMztcclxufVxyXG5cclxudWwge1xyXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgcGFkZGluZy1sZWZ0OiAwO1xyXG59XHJcblxyXG5saSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIG1hcmdpbi1ib3R0b206IDVweDtcclxufVxyXG5cclxubGkgaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdIHtcclxuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbn1cclxuXHJcbi5jb21wbGV0ZWQge1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xyXG4gIGNvbG9yOiBncmF5O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","DashboardClientComponent_div_5_span_8_span_2_Template","ɵɵadvance","ɵɵtextInterpolate1","ctx_r3","getUserName","userId_r6","ɵɵproperty","last_r7","ɵɵlistener","DashboardClientComponent_div_5_li_15_Template_input_change_1_listener","restoredCtx","ɵɵrestoreView","_r11","task_r9","$implicit","ctx_r10","ɵɵnextContext","ɵɵresetView","toggleTask","done","ɵɵclassProp","ɵɵtextInterpolate","title","DashboardClientComponent_div_5_span_8_Template","ɵɵelement","DashboardClientComponent_div_5_Template_button_click_12_listener","_r13","project_r2","_r4","ɵɵreference","ctx_r12","addTask","value","DashboardClientComponent_div_5_li_15_Template","name","description","assignedTo","tasks","DashboardClientComponent","constructor","dashboardClientService","currentUser","projects","users","loadingProjects","loadingUsers","errorMessage","ngOnInit","userData","localStorage","getItem","JSON","parse","console","error","email","getProjectsByUserEmail","subscribe","next","err","getAllUsers","project","trim","id","newTask","addTaskToProject","savedTask","push","task","toggleTaskStatus","updatedTask","userId","user","find","u","ɵɵdirectiveInject","i1","DashboardClientService","selectors","decls","vars","consts","template","DashboardClientComponent_Template","rf","ctx","DashboardClientComponent_div_4_Template","DashboardClientComponent_div_5_Template","length"],"sources":["C:\\Users\\monta\\OneDrive\\Documents\\Projects\\todo-project-manager\\src\\app\\features\\dashboard\\dashboard-client\\dashboard-client.component.ts","C:\\Users\\monta\\OneDrive\\Documents\\Projects\\todo-project-manager\\src\\app\\features\\dashboard\\dashboard-client\\dashboard-client.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Project, Task, User, DashboardClientService } from '../../../services/dashboard-client.service';\n\n@Component({\n  selector: 'app-dashboard-client',\n  templateUrl: './dashboard-client.component.html',\n  styleUrls: ['./dashboard-client.component.css']\n})\nexport class DashboardClientComponent implements OnInit {\n  currentUser: User | null = null; // utilisateur connecté\n  projects: Project[] = [];\n  users: User[] = [];\n  loadingProjects: boolean = true;\n  loadingUsers: boolean = true;\n  errorMessage: string = '';\n\n  constructor(private dashboardClientService: DashboardClientService) {}\n\n  ngOnInit(): void {\n    // Récupérer l'utilisateur connecté depuis le localStorage\n    const userData = localStorage.getItem('currentUser');\n    if (userData) {\n      this.currentUser = JSON.parse(userData);\n    } else {\n      console.error('Aucun utilisateur connecté trouvé dans localStorage.');\n      this.errorMessage = \"Vous n'êtes pas connecté.\";\n      this.loadingProjects = false;\n      this.loadingUsers = false;\n      return;\n    }\n\n    // Vérifier que l'email existe\n    if (!this.currentUser.email) {\n      console.error('Email de l’utilisateur manquant.');\n      this.errorMessage = \"Email utilisateur manquant.\";\n      this.loadingProjects = false;\n      this.loadingUsers = false;\n      return;\n    }\n\n    // Charger les projets assignés à l'utilisateur\n    this.dashboardClientService.getProjectsByUserEmail(this.currentUser.email)\n      .subscribe({\n        next: (projects) => {\n          this.projects = projects;\n          this.loadingProjects = false;\n        },\n        error: (err) => {\n          console.error('Erreur lors du chargement des projets :', err);\n          this.errorMessage = \"Impossible de charger les projets.\";\n          this.loadingProjects = false;\n        }\n      });\n\n    // Charger tous les utilisateurs pour les noms dans \"Assigné à\"\n    this.dashboardClientService.getAllUsers()\n      .subscribe({\n        next: (users) => {\n          this.users = users;\n          this.loadingUsers = false;\n        },\n        error: (err) => {\n          console.error('Erreur lors du chargement des utilisateurs :', err);\n          this.errorMessage = \"Impossible de charger les utilisateurs.\";\n          this.loadingUsers = false;\n        }\n      });\n  }\n\n  addTask(project: Project, title: string) {\n    if (!title.trim()) return;\n    if (!project.id) {\n      console.error('ID du projet manquant pour ajouter une tâche.');\n      return;\n    }\n\n    const newTask: Task = { title, done: false };\n    this.dashboardClientService.addTaskToProject(project.id, newTask)\n      .subscribe({\n        next: (savedTask: Task) => {\n          if (!project.tasks) project.tasks = [];\n          project.tasks.push(savedTask);\n        },\n        error: (err) => console.error('Erreur ajout tâche :', err)\n      });\n  }\n\n  toggleTask(task: Task) {\n    if (!task.id) {\n      console.error('ID de la tâche manquant pour toggle.');\n      return;\n    }\n\n    this.dashboardClientService.toggleTaskStatus(task.id)\n      .subscribe({\n        next: (updatedTask: Task) => {\n          task.done = updatedTask.done;\n        },\n        error: (err) => console.error('Erreur toggle tâche :', err)\n      });\n  }\n\n  getUserName(userId: number): string {\n    const user = this.users.find(u => u.id === userId);\n    return user ? user.name : 'Utilisateur inconnu';\n  }\n}\n","<app-header-client></app-header-client>\n<div class=\"dashboard\">\n  <h2>Bonjour, {{ currentUser.name }}</h2>\n\n  <div *ngIf=\"projects.length === 0\" class=\"no-projects\">\n    <p>Aucun projet ne vous est assigné.</p>\n  </div>\n\n  <div class=\"projects\" *ngFor=\"let project of projects\">\n    <h3>{{ project.name }}</h3>\n    <p>{{ project.description }}</p>\n    <p><strong>Assigné à:</strong> \n      <span *ngFor=\"let userId of project.assignedTo; let last=last\">\n        {{ getUserName(userId) }}<span *ngIf=\"!last\">, </span>\n      </span>\n    </p>\n\n    <div class=\"add-task\">\n      <input #taskTitle type=\"text\" placeholder=\"Nouvelle tâche\" />\n      <button (click)=\"addTask(project, taskTitle.value); taskTitle.value=''\">Ajouter Tâche</button>\n    </div>\n\n    <ul>\n      <li *ngFor=\"let task of project.tasks\">\n        <input type=\"checkbox\" [checked]=\"task.done\" (change)=\"toggleTask(task)\" />\n        <span [class.completed]=\"task.done\">{{ task.title }}</span>\n      </li>\n    </ul>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}