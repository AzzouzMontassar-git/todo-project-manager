{"ast":null,"code":"import { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DashboardService {\n  constructor(http) {\n    this.http = http;\n    this.apiProjects = `${environment.API_URL}/projects`;\n  }\n  // ðŸ”¹ RÃ©cupÃ©rer tous les projets\n  getAllProjects() {\n    return this.http.get(this.apiProjects);\n  }\n  // ðŸ”¹ RÃ©cupÃ©rer les projets pour un utilisateur par email\n  getProjectsByUser(email) {\n    return this.http.get(`${this.apiProjects}/user/${email}`);\n  }\n  // ðŸ”¹ CrÃ©er un projet pour un utilisateur par email\n  createProject(email, project) {\n    return this.http.post(`${this.apiProjects}/user/${email}`, project);\n  }\n  // ðŸ”¹ Mettre Ã  jour un projet\n  updateProject(projectId, project) {\n    return this.http.put(`${this.apiProjects}/${projectId}`, project);\n  }\n  // ðŸ”¹ Supprimer un projet\n  deleteProject(projectId) {\n    return this.http.delete(`${this.apiProjects}/${projectId}`);\n  }\n  static {\n    this.Éµfac = function DashboardService_Factory(t) {\n      return new (t || DashboardService)(i0.ÉµÉµinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.Éµprov = /*@__PURE__*/i0.ÉµÉµdefineInjectable({\n      token: DashboardService,\n      factory: DashboardService.Éµfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","DashboardService","constructor","http","apiProjects","API_URL","getAllProjects","get","getProjectsByUser","email","createProject","project","post","updateProject","projectId","put","deleteProject","delete","i0","ÉµÉµinject","i1","HttpClient","factory","Éµfac","providedIn"],"sources":["C:\\Users\\monta\\OneDrive\\Documents\\Projects\\todo-project-manager\\src\\app\\services\\dashboard.service.ts"],"sourcesContent":["\n// src/app/services/dashboard.service.ts\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../environments/environment';\n\nexport interface Task {\n  id?: number;\n  title: string;\n  done: boolean;\n}\n\nexport interface Project {\n  id?: number;\n  name: string;\n  description: string;\n  assignedTo: number[];\n  tasks: Task[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n  private apiProjects = `${environment.API_URL}/projects`;\n  \n  constructor(private http: HttpClient) {}\n  \n  // ðŸ”¹ RÃ©cupÃ©rer tous les projets\n  getAllProjects(): Observable<Project[]> {\n    return this.http.get<Project[]>(this.apiProjects);\n  }\n  \n  // ðŸ”¹ RÃ©cupÃ©rer les projets pour un utilisateur par email\n  getProjectsByUser(email: string): Observable<Project[]> {\n    return this.http.get<Project[]>(`${this.apiProjects}/user/${email}`);\n  }\n  \n  // ðŸ”¹ CrÃ©er un projet pour un utilisateur par email\n  createProject(email: string, project: Project): Observable<Project> {\n    return this.http.post<Project>(`${this.apiProjects}/user/${email}`, project);\n  }\n  \n  // ðŸ”¹ Mettre Ã  jour un projet\n  updateProject(projectId: number, project: Project): Observable<Project> {\n    return this.http.put<Project>(`${this.apiProjects}/${projectId}`, project);\n  }\n  \n  // ðŸ”¹ Supprimer un projet\n  deleteProject(projectId: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiProjects}/${projectId}`);\n  }\n}"],"mappings":"AAKA,SAASA,WAAW,QAAQ,6BAA6B;;;AAmBzD,OAAM,MAAOC,gBAAgB;EAG3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,WAAW,GAAG,GAAGJ,WAAW,CAACK,OAAO,WAAW;EAEhB;EAEvC;EACAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAY,IAAI,CAACH,WAAW,CAAC;EACnD;EAEA;EACAI,iBAAiBA,CAACC,KAAa;IAC7B,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAY,GAAG,IAAI,CAACH,WAAW,SAASK,KAAK,EAAE,CAAC;EACtE;EAEA;EACAC,aAAaA,CAACD,KAAa,EAAEE,OAAgB;IAC3C,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAU,GAAG,IAAI,CAACR,WAAW,SAASK,KAAK,EAAE,EAAEE,OAAO,CAAC;EAC9E;EAEA;EACAE,aAAaA,CAACC,SAAiB,EAAEH,OAAgB;IAC/C,OAAO,IAAI,CAACR,IAAI,CAACY,GAAG,CAAU,GAAG,IAAI,CAACX,WAAW,IAAIU,SAAS,EAAE,EAAEH,OAAO,CAAC;EAC5E;EAEA;EACAK,aAAaA,CAACF,SAAiB;IAC7B,OAAO,IAAI,CAACX,IAAI,CAACc,MAAM,CAAO,GAAG,IAAI,CAACb,WAAW,IAAIU,SAAS,EAAE,CAAC;EACnE;;;uBA5BWb,gBAAgB,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAhBpB,gBAAgB;MAAAqB,OAAA,EAAhBrB,gBAAgB,CAAAsB,IAAA;MAAAC,UAAA,EAFf;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}