{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/dashboard.service\";\nimport * as i2 from \"../../../services/user.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../../shared/components/header-user/header-user.component\";\nfunction DashboardComponent_div_3_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r5.id)(\"disabled\", user_r5.role === \"admin\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", user_r5.nom, \" \", user_r5.prenom, \" - \", user_r5.email, \" \");\n  }\n}\nfunction DashboardComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"input\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_div_3_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.newProjectName = $event);\n    })(\"blur\", function DashboardComponent_div_3_Template_input_blur_1_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.validateForm());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"input\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_div_3_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.newProjectDescription = $event);\n    })(\"blur\", function DashboardComponent_div_3_Template_input_blur_2_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.validateForm());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 7);\n    i0.ɵɵlistener(\"input\", function DashboardComponent_div_3_Template_input_input_3_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onSearchUser($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"select\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_div_3_Template_select_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.assignedUserIds = $event);\n    });\n    i0.ɵɵtemplate(5, DashboardComponent_div_3_option_5_Template, 2, 5, \"option\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_3_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.addProject());\n    });\n    i0.ɵɵtext(7, \"Create Project\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"error\", ctx_r0.newProjectNameError);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newProjectName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"error\", ctx_r0.newProjectDescriptionError);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newProjectDescription);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.assignedUserIds);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.filteredUsers);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.isFormValid());\n  }\n}\nfunction DashboardComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \"Fields cannot be empty!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \" Please select at least one user to assign the project.\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_7_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const project_r14 = i0.ɵɵnextContext().$implicit;\n    const ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Assigned to: \", ctx_r15.getAssignedUserNames(project_r14), \"\");\n  }\n}\nfunction DashboardComponent_div_7_li_12_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_7_li_12_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const task_r20 = i0.ɵɵnextContext().$implicit;\n      const project_r14 = i0.ɵɵnextContext().$implicit;\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.removeTask(project_r14, task_r20));\n    });\n    i0.ɵɵtext(1, \"\\u00D7\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_7_li_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"input\", 22);\n    i0.ɵɵlistener(\"change\", function DashboardComponent_div_7_li_12_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r27);\n      const task_r20 = restoredCtx.$implicit;\n      const project_r14 = i0.ɵɵnextContext().$implicit;\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.toggleTask(task_r20, project_r14));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, DashboardComponent_div_7_li_12_button_4_Template, 2, 0, \"button\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r20 = ctx.$implicit;\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", task_r20.done);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"text-decoration\", task_r20.done ? \"line-through\" : \"none\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r20.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r17.currentUser.role === \"admin\");\n  }\n}\nfunction DashboardComponent_div_7_button_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_7_button_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const project_r14 = i0.ɵɵnextContext().$implicit;\n      const ctx_r29 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r29.removeProject(project_r14));\n    });\n    i0.ɵɵtext(1, \"Delete Project\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, DashboardComponent_div_7_p_5_Template, 2, 1, \"p\", 14);\n    i0.ɵɵelementStart(6, \"div\", 15);\n    i0.ɵɵelement(7, \"input\", 16, 17);\n    i0.ɵɵelementStart(9, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_7_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r33);\n      const project_r14 = restoredCtx.$implicit;\n      const _r16 = i0.ɵɵreference(8);\n      const ctx_r32 = i0.ɵɵnextContext();\n      ctx_r32.addTask(project_r14, _r16.value);\n      return i0.ɵɵresetView(_r16.value = \"\");\n    });\n    i0.ɵɵtext(10, \"Add Task\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"ul\", 19);\n    i0.ɵɵtemplate(12, DashboardComponent_div_7_li_12_Template, 5, 5, \"li\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, DashboardComponent_div_7_button_13_Template, 2, 0, \"button\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const project_r14 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(project_r14.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(project_r14.description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.currentUser.role === \"admin\");\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", project_r14.tasks);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.currentUser.role === \"admin\");\n  }\n}\nexport class DashboardComponent {\n  constructor(dashboardService, userService, cd) {\n    this.dashboardService = dashboardService;\n    this.userService = userService;\n    this.cd = cd;\n    this.currentUser = {\n      id: 1,\n      nom: 'Admin',\n      prenom: 'Admin',\n      email: 'admin@example.com',\n      role: 'admin'\n    };\n    this.users = [];\n    this.filteredUsers = [];\n    this.projects = [];\n    this.newProjectName = '';\n    this.newProjectDescription = '';\n    this.assignedUserIds = [];\n    this.newProjectNameError = false;\n    this.newProjectDescriptionError = false;\n    this.searchTerm$ = new Subject();\n  }\n  ngOnInit() {\n    this.loadUsers();\n    this.searchTerm$.pipe(debounceTime(300), distinctUntilChanged()).subscribe(term => this.filterUsers(term));\n  }\n  loadUsers() {\n    this.userService.getAllUsers().subscribe({\n      next: users => {\n        this.users = users.filter(u => u.role !== 'admin');\n        this.filteredUsers = [...this.users];\n        this.loadProjects();\n      },\n      error: error => {\n        console.error('Erreur lors du chargement des utilisateurs:', error);\n      }\n    });\n  }\n  loadProjects() {\n    if (this.currentUser.role === 'admin') {\n      // Pour les admins, charger TOUS les projets\n      this.dashboardService.getAllProjects().subscribe({\n        next: projects => {\n          this.projects = projects;\n          this.cd.detectChanges();\n        },\n        error: error => {\n          console.error('Erreur lors du chargement des projets:', error);\n          this.projects = [];\n        }\n      });\n    } else {\n      // Pour les utilisateurs normaux, charger seulement leurs projets\n      this.dashboardService.getProjectsByUser(this.currentUser.email).subscribe({\n        next: projects => {\n          this.projects = projects;\n          this.cd.detectChanges();\n        },\n        error: error => {\n          console.error('Erreur lors du chargement des projets utilisateur:', error);\n          this.projects = [];\n        }\n      });\n    }\n  }\n  isFormValid() {\n    return !!this.newProjectName.trim() && !!this.newProjectDescription.trim() && this.assignedUserIds.length > 0;\n  }\n  validateForm() {\n    this.newProjectNameError = !this.newProjectName.trim();\n    this.newProjectDescriptionError = !this.newProjectDescription.trim();\n  }\n  addProject() {\n    this.validateForm();\n    if (this.currentUser.role !== 'admin' || !this.isFormValid()) return;\n    const project = {\n      name: this.newProjectName.trim(),\n      description: this.newProjectDescription.trim(),\n      assignedTo: [...this.assignedUserIds],\n      tasks: []\n    };\n    // Créer le projet pour le premier utilisateur assigné\n    const firstUserId = this.assignedUserIds[0];\n    const firstUser = this.users.find(u => u.id === firstUserId);\n    if (firstUser) {\n      this.dashboardService.createProject(firstUser.email, project).subscribe({\n        next: savedProject => {\n          this.projects.push(savedProject);\n          this.cd.detectChanges();\n          this.resetForm();\n          console.log('Projet créé avec succès:', savedProject);\n        },\n        error: error => {\n          console.error('Erreur lors de la création du projet:', error);\n        }\n      });\n    }\n  }\n  resetForm() {\n    this.newProjectName = '';\n    this.newProjectDescription = '';\n    this.assignedUserIds = [];\n    this.newProjectNameError = false;\n    this.newProjectDescriptionError = false;\n  }\n  addTask(project, taskTitle) {\n    if (!taskTitle || !taskTitle.trim()) {\n      console.log('Titre de tâche vide, abandon');\n      return;\n    }\n    const task = {\n      title: taskTitle.trim(),\n      done: false\n    };\n    // Ajouter la tâche localement d'abord\n    project.tasks.push(task);\n    // Puis mettre à jour sur le serveur\n    if (project.id) {\n      this.dashboardService.updateProject(project.id, project).subscribe({\n        next: updatedProject => {\n          console.log('Tâche ajoutée avec succès:', task);\n          // Optionnel: remplacer le projet local par la version serveur\n          const index = this.projects.findIndex(p => p.id === project.id);\n          if (index !== -1) {\n            this.projects[index] = updatedProject;\n          }\n          this.cd.detectChanges();\n        },\n        error: error => {\n          console.error('Erreur lors de l\\'ajout de la tâche:', error);\n          // Rollback en cas d'erreur\n          project.tasks = project.tasks.filter(t => t !== task);\n          this.cd.detectChanges();\n        }\n      });\n    } else {\n      console.error('Projet sans ID, impossible de sauvegarder la tâche');\n    }\n  }\n  toggleTask(task, project) {\n    task.done = !task.done;\n    if (project.id) {\n      this.dashboardService.updateProject(project.id, project).subscribe({\n        next: () => {\n          console.log('Statut de tâche mis à jour:', task);\n        },\n        error: error => {\n          console.error('Erreur lors de la mise à jour de la tâche:', error);\n          // Rollback\n          task.done = !task.done;\n          this.cd.detectChanges();\n        }\n      });\n    }\n  }\n  removeTask(project, task) {\n    const originalTasks = [...project.tasks];\n    project.tasks = project.tasks.filter(t => t !== task);\n    if (project.id) {\n      this.dashboardService.updateProject(project.id, project).subscribe({\n        next: () => {\n          console.log('Tâche supprimée avec succès');\n          this.cd.detectChanges();\n        },\n        error: error => {\n          console.error('Erreur lors de la suppression de la tâche:', error);\n          // Rollback\n          project.tasks = originalTasks;\n          this.cd.detectChanges();\n        }\n      });\n    }\n  }\n  removeProject(project) {\n    if (!project.id) return;\n    this.dashboardService.deleteProject(project.id).subscribe({\n      next: () => {\n        this.projects = this.projects.filter(p => p !== project);\n        this.cd.detectChanges();\n        console.log('Projet supprimé avec succès');\n      },\n      error: error => {\n        console.error('Erreur lors de la suppression du projet:', error);\n      }\n    });\n  }\n  getAssignedUserNames(project) {\n    return project.assignedTo.map(id => {\n      const user = this.users.find(u => u.id === id);\n      return user ? `${user.nom} ${user.prenom} (${user.email})` : '';\n    }).filter(Boolean).join(', ');\n  }\n  onSearchUser(event) {\n    const term = event.target.value || '';\n    this.searchTerm$.next(term);\n  }\n  filterUsers(term) {\n    this.filteredUsers = term ? this.users.filter(u => u.nom.toLowerCase().includes(term.toLowerCase()) || u.prenom.toLowerCase().includes(term.toLowerCase()) || u.email.toLowerCase().includes(term.toLowerCase())) : [...this.users];\n  }\n  get visibleProjects() {\n    if (this.currentUser.role === 'admin') {\n      return this.projects;\n    }\n    return this.projects.filter(p => p.assignedTo.includes(this.currentUser.id));\n  }\n  get hasFormErrors() {\n    return this.newProjectNameError || this.newProjectDescriptionError;\n  }\n  static {\n    this.ɵfac = function DashboardComponent_Factory(t) {\n      return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.DashboardService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardComponent,\n      selectors: [[\"app-dashboard\"]],\n      decls: 8,\n      vars: 4,\n      consts: [[\"class\", \"project-form\", 4, \"ngIf\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"project-list\"], [\"class\", \"project-card\", 4, \"ngFor\", \"ngForOf\"], [1, \"project-form\"], [\"placeholder\", \"Project Name\", 3, \"ngModel\", \"ngModelChange\", \"blur\"], [\"placeholder\", \"Description\", 3, \"ngModel\", \"ngModelChange\", \"blur\"], [\"type\", \"text\", \"placeholder\", \"Search user...\", 3, \"input\"], [\"multiple\", \"\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [3, \"disabled\", \"click\"], [3, \"value\", \"disabled\"], [1, \"error-message\"], [1, \"project-card\"], [4, \"ngIf\"], [1, \"task-form\"], [\"placeholder\", \"New Task\"], [\"taskInput\", \"\"], [3, \"click\"], [1, \"task-list\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"delete-btn\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"checkbox\", 3, \"checked\", \"change\"], [1, \"delete-btn\", 3, \"click\"]],\n      template: function DashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"app-header-user\");\n          i0.ɵɵelementStart(1, \"h2\");\n          i0.ɵɵtext(2, \"Dashboard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, DashboardComponent_div_3_Template, 8, 9, \"div\", 0);\n          i0.ɵɵtemplate(4, DashboardComponent_div_4_Template, 2, 0, \"div\", 1);\n          i0.ɵɵtemplate(5, DashboardComponent_div_5_Template, 2, 0, \"div\", 1);\n          i0.ɵɵelementStart(6, \"div\", 2);\n          i0.ɵɵtemplate(7, DashboardComponent_div_7_Template, 14, 5, \"div\", 3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.currentUser.role === \"admin\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.hasFormErrors);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.assignedUserIds.length === 0 && ctx.currentUser.role === \"admin\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.visibleProjects);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.NgIf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectMultipleControlValueAccessor, i4.NgControlStatus, i4.NgModel, i5.HeaderUserComponent],\n      styles: [\".dashboard-container[_ngcontent-%COMP%] {\\n  text-align: center;\\n  padding: 50px 20px;\\n  max-width: 1000px;\\n  margin: 0 auto;\\n}\\n\\n.dashboard-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  color: #1f2937;\\n  font-size: 2rem;\\n  margin-bottom: 20px;\\n}\\n\\n.project-form[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 10px;\\n  margin-bottom: 20px;\\n  justify-content: center;\\n}\\n\\n.project-form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  border: 2px solid #e5e7eb;\\n  border-radius: 5px;\\n  font-size: 1rem;\\n}\\n\\n.project-form[_ngcontent-%COMP%]   input.error[_ngcontent-%COMP%] {\\n  border-color: #dc2626;\\n}\\n\\n.project-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  padding: 10px 20px;\\n  background-color: #4b6cb7;\\n  color: white;\\n  border: none;\\n  border-radius: 5px;\\n  cursor: pointer;\\n  transition: background-color 0.3s;\\n}\\n\\n.project-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #3a558e;\\n}\\n\\n.error-message[_ngcontent-%COMP%] {\\n  color: #dc2626;\\n  font-size: 0.9rem;\\n  margin-top: 5px;\\n}\\n\\n.project-list[_ngcontent-%COMP%] {\\n  display: grid;\\n  gap: 20px;\\n}\\n\\n.project-card[_ngcontent-%COMP%] {\\n  background: #fff;\\n  padding: 20px;\\n  border-radius: 10px;\\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\\n  transition: transform 0.3s ease;\\n}\\n\\n.project-card[_ngcontent-%COMP%]:hover {\\n  transform: translateY(-5px);\\n}\\n\\n.task-form[_ngcontent-%COMP%] {\\n  margin: 10px 0;\\n  display: flex;\\n  gap: 10px;\\n}\\n\\n.task-form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  padding: 8px;\\n  border: 2px solid #e5e7eb;\\n  border-radius: 5px;\\n}\\n\\n.task-list[_ngcontent-%COMP%] {\\n  list-style: none;\\n  padding: 0;\\n  text-align: left;\\n}\\n\\n.task-item[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n  margin: 5px 0;\\n}\\n\\n.delete-btn[_ngcontent-%COMP%] {\\n  background: #dc2626;\\n  color: white;\\n  border: none;\\n  border-radius: 50%;\\n  width: 20px;\\n  height: 20px;\\n  cursor: pointer;\\n  font-size: 1rem;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.delete-btn[_ngcontent-%COMP%]:hover {\\n  background: #b91c1c;\\n}\\n\\n@media (max-width: 600px) {\\n  .project-form[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n  .task-form[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvZGFzaGJvYXJkL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsZUFBZTtFQUNmLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixTQUFTO0VBQ1QsbUJBQW1CO0VBQ25CLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLGFBQWE7RUFDYix5QkFBeUI7RUFDekIsa0JBQWtCO0VBQ2xCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZixpQ0FBaUM7QUFDbkM7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsaUJBQWlCO0VBQ2pCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsU0FBUztBQUNYOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIseUNBQXlDO0VBQ3pDLCtCQUErQjtBQUNqQzs7QUFFQTtFQUNFLDJCQUEyQjtBQUM3Qjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxhQUFhO0VBQ2IsU0FBUztBQUNYOztBQUVBO0VBQ0UsWUFBWTtFQUNaLHlCQUF5QjtFQUN6QixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsVUFBVTtFQUNWLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsU0FBUztFQUNULGFBQWE7QUFDZjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsWUFBWTtFQUNaLGVBQWU7RUFDZixlQUFlO0VBQ2YsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQix1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRTtJQUNFLHNCQUFzQjtFQUN4QjtFQUNBO0lBQ0Usc0JBQXNCO0VBQ3hCO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIuZGFzaGJvYXJkLWNvbnRhaW5lciB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHBhZGRpbmc6IDUwcHggMjBweDtcclxuICBtYXgtd2lkdGg6IDEwMDBweDtcclxuICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5cclxuLmRhc2hib2FyZC1jb250YWluZXIgaDIge1xyXG4gIGNvbG9yOiAjMWYyOTM3O1xyXG4gIGZvbnQtc2l6ZTogMnJlbTtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcblxyXG4ucHJvamVjdC1mb3JtIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGdhcDogMTBweDtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG4ucHJvamVjdC1mb3JtIGlucHV0IHtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIGJvcmRlcjogMnB4IHNvbGlkICNlNWU3ZWI7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGZvbnQtc2l6ZTogMXJlbTtcclxufVxyXG5cclxuLnByb2plY3QtZm9ybSBpbnB1dC5lcnJvciB7XHJcbiAgYm9yZGVyLWNvbG9yOiAjZGMyNjI2O1xyXG59XHJcblxyXG4ucHJvamVjdC1mb3JtIGJ1dHRvbiB7XHJcbiAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM0YjZjYjc7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcztcclxufVxyXG5cclxuLnByb2plY3QtZm9ybSBidXR0b246aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMzYTU1OGU7XHJcbn1cclxuXHJcbi5lcnJvci1tZXNzYWdlIHtcclxuICBjb2xvcjogI2RjMjYyNjtcclxuICBmb250LXNpemU6IDAuOXJlbTtcclxuICBtYXJnaW4tdG9wOiA1cHg7XHJcbn1cclxuXHJcbi5wcm9qZWN0LWxpc3Qge1xyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ2FwOiAyMHB4O1xyXG59XHJcblxyXG4ucHJvamVjdC1jYXJkIHtcclxuICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBib3gtc2hhZG93OiAwIDRweCAxMnB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlO1xyXG59XHJcblxyXG4ucHJvamVjdC1jYXJkOmhvdmVyIHtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTVweCk7XHJcbn1cclxuXHJcbi50YXNrLWZvcm0ge1xyXG4gIG1hcmdpbjogMTBweCAwO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZ2FwOiAxMHB4O1xyXG59XHJcblxyXG4udGFzay1mb3JtIGlucHV0IHtcclxuICBwYWRkaW5nOiA4cHg7XHJcbiAgYm9yZGVyOiAycHggc29saWQgI2U1ZTdlYjtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuXHJcbi50YXNrLWxpc3Qge1xyXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgcGFkZGluZzogMDtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcblxyXG4udGFzay1pdGVtIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgZ2FwOiAxMHB4O1xyXG4gIG1hcmdpbjogNXB4IDA7XHJcbn1cclxuXHJcbi5kZWxldGUtYnRuIHtcclxuICBiYWNrZ3JvdW5kOiAjZGMyNjI2O1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gIHdpZHRoOiAyMHB4O1xyXG4gIGhlaWdodDogMjBweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgZm9udC1zaXplOiAxcmVtO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuLmRlbGV0ZS1idG46aG92ZXIge1xyXG4gIGJhY2tncm91bmQ6ICNiOTFjMWM7XHJcbn1cclxuXHJcbkBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xyXG4gIC5wcm9qZWN0LWZvcm0ge1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICB9XHJcbiAgLnRhc2stZm9ybSB7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["Subject","debounceTime","distinctUntilChanged","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","user_r5","id","role","ɵɵadvance","ɵɵtextInterpolate3","nom","prenom","email","ɵɵlistener","DashboardComponent_div_3_Template_input_ngModelChange_1_listener","$event","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","newProjectName","DashboardComponent_div_3_Template_input_blur_1_listener","ctx_r8","validateForm","DashboardComponent_div_3_Template_input_ngModelChange_2_listener","ctx_r9","newProjectDescription","DashboardComponent_div_3_Template_input_blur_2_listener","ctx_r10","DashboardComponent_div_3_Template_input_input_3_listener","ctx_r11","onSearchUser","DashboardComponent_div_3_Template_select_ngModelChange_4_listener","ctx_r12","assignedUserIds","ɵɵtemplate","DashboardComponent_div_3_option_5_Template","DashboardComponent_div_3_Template_button_click_6_listener","ctx_r13","addProject","ɵɵclassProp","ctx_r0","newProjectNameError","newProjectDescriptionError","filteredUsers","isFormValid","ɵɵtextInterpolate1","ctx_r15","getAssignedUserNames","project_r14","DashboardComponent_div_7_li_12_button_4_Template_button_click_0_listener","_r24","task_r20","$implicit","ctx_r22","removeTask","DashboardComponent_div_7_li_12_Template_input_change_1_listener","restoredCtx","_r27","ctx_r26","toggleTask","DashboardComponent_div_7_li_12_button_4_Template","done","ɵɵstyleProp","ɵɵtextInterpolate","title","ctx_r17","currentUser","DashboardComponent_div_7_button_13_Template_button_click_0_listener","_r31","ctx_r29","removeProject","DashboardComponent_div_7_p_5_Template","ɵɵelement","DashboardComponent_div_7_Template_button_click_9_listener","_r33","_r16","ɵɵreference","ctx_r32","addTask","value","DashboardComponent_div_7_li_12_Template","DashboardComponent_div_7_button_13_Template","name","description","ctx_r3","tasks","DashboardComponent","constructor","dashboardService","userService","cd","users","projects","searchTerm$","ngOnInit","loadUsers","pipe","subscribe","term","filterUsers","getAllUsers","next","filter","u","loadProjects","error","console","getAllProjects","detectChanges","getProjectsByUser","trim","length","project","assignedTo","firstUserId","firstUser","find","createProject","savedProject","push","resetForm","log","taskTitle","task","updateProject","updatedProject","index","findIndex","p","t","originalTasks","deleteProject","map","user","Boolean","join","event","target","toLowerCase","includes","visibleProjects","hasFormErrors","ɵɵdirectiveInject","i1","DashboardService","i2","UserService","ChangeDetectorRef","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","DashboardComponent_div_3_Template","DashboardComponent_div_4_Template","DashboardComponent_div_5_Template","DashboardComponent_div_7_Template"],"sources":["C:\\Users\\monta\\OneDrive\\Documents\\Projects\\todo-project-manager\\src\\app\\features\\dashboard\\dashboard\\dashboard.component.ts","C:\\Users\\monta\\OneDrive\\Documents\\Projects\\todo-project-manager\\src\\app\\features\\dashboard\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { DashboardService, Project, Task } from '../../../services/dashboard.service';\nimport { UserService, User } from '../../../services/user.service';\nimport { Subject, forkJoin } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  currentUser: User = { id: 1, nom: 'Admin', prenom: 'Admin', email: 'admin@example.com', role: 'admin' };\n\n  users: User[] = [];\n  filteredUsers: User[] = [];\n  projects: Project[] = [];\n\n  newProjectName = '';\n  newProjectDescription = '';\n  assignedUserIds: number[] = [];\n  newProjectNameError = false;\n  newProjectDescriptionError = false;\n\n  searchTerm$ = new Subject<string>();\n\n  constructor(\n    private dashboardService: DashboardService,\n    private userService: UserService,\n    private cd: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.loadUsers();\n\n    this.searchTerm$.pipe(\n      debounceTime(300),\n      distinctUntilChanged()\n    ).subscribe(term => this.filterUsers(term));\n  }\n\n  loadUsers() {\n    this.userService.getAllUsers().subscribe({\n      next: (users) => {\n        this.users = users.filter(u => u.role !== 'admin');\n        this.filteredUsers = [...this.users];\n        this.loadProjects();\n      },\n      error: (error) => {\n        console.error('Erreur lors du chargement des utilisateurs:', error);\n      }\n    });\n  }\n\n  loadProjects() {\n    if (this.currentUser.role === 'admin') {\n      // Pour les admins, charger TOUS les projets\n      this.dashboardService.getAllProjects().subscribe({\n        next: (projects) => {\n          this.projects = projects;\n          this.cd.detectChanges();\n        },\n        error: (error) => {\n          console.error('Erreur lors du chargement des projets:', error);\n          this.projects = [];\n        }\n      });\n    } else {\n      // Pour les utilisateurs normaux, charger seulement leurs projets\n      this.dashboardService.getProjectsByUser(this.currentUser.email).subscribe({\n        next: (projects) => {\n          this.projects = projects;\n          this.cd.detectChanges();\n        },\n        error: (error) => {\n          console.error('Erreur lors du chargement des projets utilisateur:', error);\n          this.projects = [];\n        }\n      });\n    }\n  }\n\n  isFormValid(): boolean {\n    return !!this.newProjectName.trim() && \n           !!this.newProjectDescription.trim() && \n           this.assignedUserIds.length > 0;\n  }\n\n  validateForm() {\n    this.newProjectNameError = !this.newProjectName.trim();\n    this.newProjectDescriptionError = !this.newProjectDescription.trim();\n  }\n\n  addProject() {\n    this.validateForm();\n    if (this.currentUser.role !== 'admin' || !this.isFormValid()) return;\n\n    const project: Project = {\n      name: this.newProjectName.trim(),\n      description: this.newProjectDescription.trim(),\n      assignedTo: [...this.assignedUserIds],\n      tasks: []\n    };\n\n    // Créer le projet pour le premier utilisateur assigné\n    const firstUserId = this.assignedUserIds[0];\n    const firstUser = this.users.find(u => u.id === firstUserId);\n    \n    if (firstUser) {\n      this.dashboardService.createProject(firstUser.email, project).subscribe({\n        next: (savedProject) => {\n          this.projects.push(savedProject);\n          this.cd.detectChanges();\n          this.resetForm();\n          console.log('Projet créé avec succès:', savedProject);\n        },\n        error: (error) => {\n          console.error('Erreur lors de la création du projet:', error);\n        }\n      });\n    }\n  }\n\n  resetForm() {\n    this.newProjectName = '';\n    this.newProjectDescription = '';\n    this.assignedUserIds = [];\n    this.newProjectNameError = false;\n    this.newProjectDescriptionError = false;\n  }\n\n  addTask(project: Project, taskTitle: string) {\n    if (!taskTitle || !taskTitle.trim()) {\n      console.log('Titre de tâche vide, abandon');\n      return;\n    }\n\n    const task: Task = { \n      title: taskTitle.trim(), \n      done: false \n    };\n\n    // Ajouter la tâche localement d'abord\n    project.tasks.push(task);\n\n    // Puis mettre à jour sur le serveur\n    if (project.id) {\n      this.dashboardService.updateProject(project.id, project).subscribe({\n        next: (updatedProject) => {\n          console.log('Tâche ajoutée avec succès:', task);\n          // Optionnel: remplacer le projet local par la version serveur\n          const index = this.projects.findIndex(p => p.id === project.id);\n          if (index !== -1) {\n            this.projects[index] = updatedProject;\n          }\n          this.cd.detectChanges();\n        },\n        error: (error) => {\n          console.error('Erreur lors de l\\'ajout de la tâche:', error);\n          // Rollback en cas d'erreur\n          project.tasks = project.tasks.filter(t => t !== task);\n          this.cd.detectChanges();\n        }\n      });\n    } else {\n      console.error('Projet sans ID, impossible de sauvegarder la tâche');\n    }\n  }\n\n  toggleTask(task: Task, project: Project) {\n    task.done = !task.done;\n    \n    if (project.id) {\n      this.dashboardService.updateProject(project.id, project).subscribe({\n        next: () => {\n          console.log('Statut de tâche mis à jour:', task);\n        },\n        error: (error) => {\n          console.error('Erreur lors de la mise à jour de la tâche:', error);\n          // Rollback\n          task.done = !task.done;\n          this.cd.detectChanges();\n        }\n      });\n    }\n  }\n\n  removeTask(project: Project, task: Task) {\n    const originalTasks = [...project.tasks];\n    project.tasks = project.tasks.filter(t => t !== task);\n    \n    if (project.id) {\n      this.dashboardService.updateProject(project.id, project).subscribe({\n        next: () => {\n          console.log('Tâche supprimée avec succès');\n          this.cd.detectChanges();\n        },\n        error: (error) => {\n          console.error('Erreur lors de la suppression de la tâche:', error);\n          // Rollback\n          project.tasks = originalTasks;\n          this.cd.detectChanges();\n        }\n      });\n    }\n  }\n\n  removeProject(project: Project) {\n    if (!project.id) return;\n    \n    this.dashboardService.deleteProject(project.id).subscribe({\n      next: () => {\n        this.projects = this.projects.filter(p => p !== project);\n        this.cd.detectChanges();\n        console.log('Projet supprimé avec succès');\n      },\n      error: (error) => {\n        console.error('Erreur lors de la suppression du projet:', error);\n      }\n    });\n  }\n\n  getAssignedUserNames(project: Project): string {\n    return project.assignedTo\n      .map(id => {\n        const user = this.users.find(u => u.id === id);\n        return user ? `${user.nom} ${user.prenom} (${user.email})` : '';\n      })\n      .filter(Boolean)\n      .join(', ');\n  }\n\n  onSearchUser(event: Event) {\n    const term = (event.target as HTMLInputElement).value || '';\n    this.searchTerm$.next(term);\n  }\n\n  filterUsers(term: string) {\n    this.filteredUsers = term\n      ? this.users.filter(u => \n          u.nom.toLowerCase().includes(term.toLowerCase()) ||\n          u.prenom.toLowerCase().includes(term.toLowerCase()) ||\n          u.email.toLowerCase().includes(term.toLowerCase())\n        )\n      : [...this.users];\n  }\n\n  get visibleProjects(): Project[] {\n    if (this.currentUser.role === 'admin') {\n      return this.projects;\n    }\n    return this.projects.filter(p => p.assignedTo.includes(this.currentUser.id!));\n  }\n\n  get hasFormErrors(): boolean {\n    return this.newProjectNameError || this.newProjectDescriptionError;\n  }\n}","<app-header-user></app-header-user>\n\n<h2>Dashboard</h2>\n\n<!-- Formulaire création projet (admin) -->\n<div *ngIf=\"currentUser.role==='admin'\" class=\"project-form\">\n  <input [(ngModel)]=\"newProjectName\" placeholder=\"Project Name\" [class.error]=\"newProjectNameError\" (blur)=\"validateForm()\" />\n  <input [(ngModel)]=\"newProjectDescription\" placeholder=\"Description\" [class.error]=\"newProjectDescriptionError\" (blur)=\"validateForm()\" />\n\n  <input type=\"text\" placeholder=\"Search user...\" (input)=\"onSearchUser($event)\" />\n\n  <select multiple [(ngModel)]=\"assignedUserIds\">\n    <option *ngFor=\"let user of filteredUsers\" [value]=\"user.id\" [disabled]=\"user.role==='admin'\">\n      {{ user.nom }} {{ user.prenom }} - {{ user.email }}\n    </option>\n  </select>\n\n  <button (click)=\"addProject()\" [disabled]=\"!isFormValid()\">Create Project</button>\n</div>\n\n<div class=\"error-message\" *ngIf=\"hasFormErrors\">Fields cannot be empty!</div>\n<div class=\"error-message\" *ngIf=\"assignedUserIds.length === 0 && currentUser.role === 'admin'\">\n  Please select at least one user to assign the project.\n</div>\n\n<!-- Liste des projets -->\n<div class=\"project-list\">\n  <div *ngFor=\"let project of visibleProjects\" class=\"project-card\">\n    <h3>{{ project.name }}</h3>\n    <p>{{ project.description }}</p>\n    <p *ngIf=\"currentUser.role==='admin'\">Assigned to: {{ getAssignedUserNames(project) }}</p>\n\n    <div class=\"task-form\">\n      <input #taskInput placeholder=\"New Task\" />\n      <button (click)=\"addTask(project, taskInput.value); taskInput.value=''\">Add Task</button>\n    </div>\n\n    <ul class=\"task-list\">\n      <li *ngFor=\"let task of project.tasks\">\n        <input type=\"checkbox\" [checked]=\"task.done\" (change)=\"toggleTask(task, project)\" />\n        <span [style.text-decoration]=\"task.done ? 'line-through' : 'none'\">{{ task.title }}</span>\n        <button *ngIf=\"currentUser.role==='admin'\" (click)=\"removeTask(project, task)\" class=\"delete-btn\">×</button>\n      </li>\n    </ul>\n\n    <button *ngIf=\"currentUser.role==='admin'\" (click)=\"removeProject(project)\" class=\"delete-btn\">Delete Project</button>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}