{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/dashboard-client.service\";\nimport * as i2 from \"../../../services/auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../../header-client/header-client.component\";\nfunction DashboardClientComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nfunction DashboardClientComponent_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"p\");\n    i0.ɵɵtext(2, \"Aucun projet ne vous est assign\\u00E9.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction DashboardClientComponent_div_5_div_2_span_8_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \", \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardClientComponent_div_5_div_2_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, DashboardClientComponent_div_5_div_2_span_8_span_2_Template, 2, 0, \"span\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const userId_r9 = ctx.$implicit;\n    const last_r10 = ctx.last;\n    const ctx_r5 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.getUserName(userId_r9), \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !last_r10);\n  }\n}\nfunction DashboardClientComponent_div_5_div_2_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelement(1, \"input\", 13, 14);\n    i0.ɵɵelementStart(3, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function DashboardClientComponent_div_5_div_2_div_9_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const _r12 = i0.ɵɵreference(2);\n      const project_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      ctx_r13.addTask(project_r4, _r12.value);\n      return i0.ɵɵresetView(_r12.value = \"\");\n    });\n    i0.ɵɵtext(4, \" Ajouter T\\u00E2che \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction DashboardClientComponent_div_5_div_2_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" \\u2705 Toutes les t\\u00E2ches de ce projet sont termin\\u00E9es. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardClientComponent_div_5_div_2_li_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"input\", 17);\n    i0.ɵɵlistener(\"change\", function DashboardClientComponent_div_5_div_2_li_12_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const task_r16 = restoredCtx.$implicit;\n      const ctx_r17 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r17.toggleTask(task_r16));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r16 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", task_r16.done)(\"disabled\", task_r16.done);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"completed\", task_r16.done);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r16.title);\n  }\n}\nfunction DashboardClientComponent_div_5_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\")(6, \"strong\");\n    i0.ɵɵtext(7, \"Assign\\u00E9 \\u00E0:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, DashboardClientComponent_div_5_div_2_span_8_Template, 3, 2, \"span\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, DashboardClientComponent_div_5_div_2_div_9_Template, 5, 0, \"div\", 9);\n    i0.ɵɵtemplate(10, DashboardClientComponent_div_5_div_2_div_10_Template, 2, 0, \"div\", 10);\n    i0.ɵɵelementStart(11, \"ul\");\n    i0.ɵɵtemplate(12, DashboardClientComponent_div_5_div_2_li_12_Template, 4, 5, \"li\", 8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const project_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(project_r4.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(project_r4.description);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", project_r4.assignedTo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.isProjectCompleted(project_r4));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.isProjectCompleted(project_r4));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", project_r4.tasks);\n  }\n}\nfunction DashboardClientComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵtemplate(1, DashboardClientComponent_div_5_div_1_Template, 3, 0, \"div\", 4);\n    i0.ɵɵtemplate(2, DashboardClientComponent_div_5_div_2_Template, 13, 6, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.projects.length === 0 && !ctx_r1.loadingProjects);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.projects);\n  }\n}\nexport class DashboardClientComponent {\n  constructor(dashboardClientService, authService) {\n    this.dashboardClientService = dashboardClientService;\n    this.authService = authService;\n    this.currentUser = null;\n    this.projects = [];\n    this.users = [];\n    this.loadingProjects = true;\n    this.loadingUsers = true;\n    this.errorMessage = '';\n  }\n  ngOnInit() {\n    this.currentUser = this.authService.getUser();\n    if (!this.currentUser || !this.currentUser.email) {\n      this.errorMessage = \"Vous n'êtes pas connecté ou l'email est manquant.\";\n      return;\n    }\n    // Projets\n    this.dashboardClientService.getProjectsByUserEmail(this.currentUser.email).subscribe({\n      next: projects => {\n        this.projects = projects;\n        this.loadingProjects = false;\n      },\n      error: err => {\n        console.error(err);\n        this.errorMessage = \"Impossible de charger les projets.\";\n        this.loadingProjects = false;\n      }\n    });\n    // Tous les utilisateurs\n    this.dashboardClientService.getAllUsers().subscribe({\n      next: users => {\n        this.users = users;\n        this.loadingUsers = false;\n      },\n      error: err => {\n        console.error(err);\n        this.errorMessage = \"Impossible de charger les utilisateurs.\";\n        this.loadingUsers = false;\n      }\n    });\n  }\n  addTask(project, title) {\n    if (!title.trim() || !project.id) return;\n    const newTask = {\n      title,\n      done: false\n    };\n    this.dashboardClientService.addTaskToProject(project.id, newTask).subscribe(task => {\n      if (!project.tasks) project.tasks = [];\n      project.tasks.push(task);\n    });\n  }\n  toggleTask(task) {\n    if (!task.id) return;\n    this.dashboardClientService.toggleTaskStatus(task.id).subscribe(updatedTask => task.done = updatedTask.done);\n  }\n  getUserName(userId) {\n    const user = this.users.find(u => u.id === userId);\n    return user ? `${user.nom} ${user.prenom}` : 'Utilisateur inconnu';\n  }\n  get displayName() {\n    if (!this.currentUser) return 'Utilisateur';\n    if (this.currentUser.nom && this.currentUser.prenom) return `${this.currentUser.nom} ${this.currentUser.prenom}`;\n    if (this.currentUser.nom) return this.currentUser.nom;\n    return 'Utilisateur';\n  }\n  static {\n    this.ɵfac = function DashboardClientComponent_Factory(t) {\n      return new (t || DashboardClientComponent)(i0.ɵɵdirectiveInject(i1.DashboardClientService), i0.ɵɵdirectiveInject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardClientComponent,\n      selectors: [[\"app-dashboard-client\"]],\n      decls: 6,\n      vars: 3,\n      consts: [[1, \"dashboard\"], [\"class\", \"alert alert-error\", 4, \"ngIf\"], [\"class\", \"dashboard\", 4, \"ngIf\"], [1, \"alert\", \"alert-error\"], [\"class\", \"no-projects\", 4, \"ngIf\"], [\"class\", \"projects\", 4, \"ngFor\", \"ngForOf\"], [1, \"no-projects\"], [1, \"projects\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"add-task\", 4, \"ngIf\"], [\"class\", \"project-completed-message\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"add-task\"], [\"type\", \"text\", \"placeholder\", \"Nouvelle t\\u00E2che\"], [\"taskTitle\", \"\"], [3, \"click\"], [1, \"project-completed-message\"], [\"type\", \"checkbox\", 3, \"checked\", \"disabled\", \"change\"]],\n      template: function DashboardClientComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"app-header-client\");\n          i0.ɵɵelementStart(1, \"div\", 0)(2, \"h2\");\n          i0.ɵɵtext(3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(4, DashboardClientComponent_div_4_Template, 2, 1, \"div\", 1);\n          i0.ɵɵtemplate(5, DashboardClientComponent_div_5_Template, 3, 2, \"div\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\"Bonjour, \", ctx.displayName, \"\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.currentUser);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.NgIf, i4.HeaderClientComponent],\n      styles: [\".dashboard[_ngcontent-%COMP%] {\\n  max-width: 800px;\\n  margin: 20px auto;\\n  padding: 20px;\\n  background: #f4f6f8;\\n  border-radius: 10px;\\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\\n  font-family: Arial, sans-serif;\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  color: #333;\\n  margin-bottom: 30px;\\n}\\n\\n.projects[_ngcontent-%COMP%] {\\n  margin-bottom: 30px;\\n  padding: 15px;\\n  background: white;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\\n}\\n\\n.projects[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  margin-bottom: 5px;\\n  color: #555;\\n}\\n\\n.projects[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  margin: 5px 0;\\n  color: #666;\\n}\\n\\n.add-task[_ngcontent-%COMP%] {\\n  display: flex;\\n  margin-bottom: 10px;\\n}\\n\\n.add-task[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  flex: 1;\\n  padding: 6px;\\n  border-radius: 5px;\\n  border: 1px solid #ccc;\\n  margin-right: 10px;\\n}\\n\\n.add-task[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  padding: 6px 12px;\\n  border: none;\\n  background-color: #007bff;\\n  color: white;\\n  border-radius: 5px;\\n  cursor: pointer;\\n}\\n\\n.add-task[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #0056b3;\\n}\\n\\nul[_ngcontent-%COMP%] {\\n  list-style: none;\\n  padding-left: 0;\\n}\\n\\nli[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  margin-bottom: 5px;\\n}\\n\\nli[_ngcontent-%COMP%]   input[type=\\\"checkbox\\\"][_ngcontent-%COMP%] {\\n  margin-right: 10px;\\n}\\n\\n.completed[_ngcontent-%COMP%] {\\n  text-decoration: line-through;\\n  color: gray;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvZGFzaGJvYXJkL2Rhc2hib2FyZC1jbGllbnQvZGFzaGJvYXJkLWNsaWVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLG1CQUFtQjtFQUNuQixxQ0FBcUM7RUFDckMsOEJBQThCO0FBQ2hDOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsYUFBYTtFQUNiLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsc0NBQXNDO0FBQ3hDOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGFBQWE7RUFDYixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsT0FBTztFQUNQLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsc0JBQXNCO0VBQ3RCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1oseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSw2QkFBNkI7RUFDN0IsV0FBVztBQUNiIiwic291cmNlc0NvbnRlbnQiOlsiLmRhc2hib2FyZCB7XHJcbiAgbWF4LXdpZHRoOiA4MDBweDtcclxuICBtYXJnaW46IDIwcHggYXV0bztcclxuICBwYWRkaW5nOiAyMHB4O1xyXG4gIGJhY2tncm91bmQ6ICNmNGY2Zjg7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLDAsMCwwLjEpO1xyXG4gIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjtcclxufVxyXG5cclxuaDIge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBjb2xvcjogIzMzMztcclxuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG59XHJcblxyXG4ucHJvamVjdHMge1xyXG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbiAgcGFkZGluZzogMTVweDtcclxuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwwLDAsMC4wNSk7XHJcbn1cclxuXHJcbi5wcm9qZWN0cyBoMyB7XHJcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gIGNvbG9yOiAjNTU1O1xyXG59XHJcblxyXG4ucHJvamVjdHMgcCB7XHJcbiAgbWFyZ2luOiA1cHggMDtcclxuICBjb2xvcjogIzY2NjtcclxufVxyXG5cclxuLmFkZC10YXNrIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbn1cclxuXHJcbi5hZGQtdGFzayBpbnB1dCB7XHJcbiAgZmxleDogMTtcclxuICBwYWRkaW5nOiA2cHg7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG59XHJcblxyXG4uYWRkLXRhc2sgYnV0dG9uIHtcclxuICBwYWRkaW5nOiA2cHggMTJweDtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLmFkZC10YXNrIGJ1dHRvbjpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwNTZiMztcclxufVxyXG5cclxudWwge1xyXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgcGFkZGluZy1sZWZ0OiAwO1xyXG59XHJcblxyXG5saSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIG1hcmdpbi1ib3R0b206IDVweDtcclxufVxyXG5cclxubGkgaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdIHtcclxuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbn1cclxuXHJcbi5jb21wbGV0ZWQge1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xyXG4gIGNvbG9yOiBncmF5O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","errorMessage","ɵɵtemplate","DashboardClientComponent_div_5_div_2_span_8_span_2_Template","ɵɵtextInterpolate1","ctx_r5","getUserName","userId_r9","ɵɵproperty","last_r10","ɵɵelement","ɵɵlistener","DashboardClientComponent_div_5_div_2_div_9_Template_button_click_3_listener","ɵɵrestoreView","_r15","_r12","ɵɵreference","project_r4","ɵɵnextContext","$implicit","ctx_r13","addTask","value","ɵɵresetView","DashboardClientComponent_div_5_div_2_li_12_Template_input_change_1_listener","restoredCtx","_r18","task_r16","ctx_r17","toggleTask","done","ɵɵclassProp","title","DashboardClientComponent_div_5_div_2_span_8_Template","DashboardClientComponent_div_5_div_2_div_9_Template","DashboardClientComponent_div_5_div_2_div_10_Template","DashboardClientComponent_div_5_div_2_li_12_Template","name","description","assignedTo","ctx_r3","isProjectCompleted","tasks","DashboardClientComponent_div_5_div_1_Template","DashboardClientComponent_div_5_div_2_Template","ctx_r1","projects","length","loadingProjects","DashboardClientComponent","constructor","dashboardClientService","authService","currentUser","users","loadingUsers","ngOnInit","getUser","email","getProjectsByUserEmail","subscribe","next","error","err","console","getAllUsers","project","trim","id","newTask","addTaskToProject","task","push","toggleTaskStatus","updatedTask","userId","user","find","u","nom","prenom","displayName","ɵɵdirectiveInject","i1","DashboardClientService","i2","AuthService","selectors","decls","vars","consts","template","DashboardClientComponent_Template","rf","ctx","DashboardClientComponent_div_4_Template","DashboardClientComponent_div_5_Template"],"sources":["C:\\Users\\monta\\OneDrive\\Documents\\Projects\\todo-project-manager\\src\\app\\features\\dashboard\\dashboard-client\\dashboard-client.component.ts","C:\\Users\\monta\\OneDrive\\Documents\\Projects\\todo-project-manager\\src\\app\\features\\dashboard\\dashboard-client\\dashboard-client.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Project, Task, User, DashboardClientService } from '../../../services/dashboard-client.service';\nimport { AuthService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-dashboard-client',\n  templateUrl: './dashboard-client.component.html',\n  styleUrls: ['./dashboard-client.component.css']\n})\nexport class DashboardClientComponent implements OnInit {\n  currentUser: User | null = null;\n  projects: Project[] = [];\n  users: User[] = [];\n  loadingProjects = true;\n  loadingUsers = true;\n  errorMessage = '';\n\n  constructor(\n    private dashboardClientService: DashboardClientService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.currentUser = this.authService.getUser();\n\n    if (!this.currentUser || !this.currentUser.email) {\n      this.errorMessage = \"Vous n'êtes pas connecté ou l'email est manquant.\";\n      return;\n    }\n\n    // Projets\n    this.dashboardClientService.getProjectsByUserEmail(this.currentUser.email)\n      .subscribe({\n        next: projects => {\n          this.projects = projects;\n          this.loadingProjects = false;\n        },\n        error: err => {\n          console.error(err);\n          this.errorMessage = \"Impossible de charger les projets.\";\n          this.loadingProjects = false;\n        }\n      });\n\n    // Tous les utilisateurs\n    this.dashboardClientService.getAllUsers()\n      .subscribe({\n        next: users => {\n          this.users = users;\n          this.loadingUsers = false;\n        },\n        error: err => {\n          console.error(err);\n          this.errorMessage = \"Impossible de charger les utilisateurs.\";\n          this.loadingUsers = false;\n        }\n      });\n  }\n\n  addTask(project: Project, title: string) {\n    if (!title.trim() || !project.id) return;\n\n    const newTask: Task = { title, done: false };\n    this.dashboardClientService.addTaskToProject(project.id, newTask)\n      .subscribe(task => {\n        if (!project.tasks) project.tasks = [];\n        project.tasks.push(task);\n      });\n  }\n\n  toggleTask(task: Task) {\n    if (!task.id) return;\n\n    this.dashboardClientService.toggleTaskStatus(task.id)\n      .subscribe(updatedTask => task.done = updatedTask.done);\n  }\n\n  getUserName(userId: number): string {\n    const user = this.users.find(u => u.id === userId);\n    return user ? `${user.nom} ${user.prenom}` : 'Utilisateur inconnu';\n  }\n\n  get displayName(): string {\n    if (!this.currentUser) return 'Utilisateur';\n    if (this.currentUser.nom && this.currentUser.prenom) return `${this.currentUser.nom} ${this.currentUser.prenom}`;\n    if (this.currentUser.nom) return this.currentUser.nom;\n    return 'Utilisateur';\n  }\n}\n","<app-header-client></app-header-client>\n\n<div class=\"dashboard\">\n  <h2>Bonjour, {{ displayName }}</h2>\n\n  <div *ngIf=\"errorMessage\" class=\"alert alert-error\">{{ errorMessage }}</div>\n\n  <div class=\"dashboard\" *ngIf=\"currentUser\">\n    <div *ngIf=\"projects.length === 0 && !loadingProjects\" class=\"no-projects\">\n      <p>Aucun projet ne vous est assigné.</p>\n    </div>\n\n    <div class=\"projects\" *ngFor=\"let project of projects\">\n      <h3>{{ project.name }}</h3>\n      <p>{{ project.description }}</p>\n      <p><strong>Assigné à:</strong> \n        <span *ngFor=\"let userId of project.assignedTo; let last=last\">\n          {{ getUserName(userId) }}<span *ngIf=\"!last\">, </span>\n        </span>\n      </p>\n\n      <!-- Section ajout tâche désactivée si une tâche est terminée -->\n      <div class=\"add-task\" *ngIf=\"!isProjectCompleted(project)\">\n        <input #taskTitle type=\"text\" placeholder=\"Nouvelle tâche\" />\n        <button (click)=\"addTask(project, taskTitle.value); taskTitle.value=''\">\n          Ajouter Tâche\n        </button>\n      </div>\n\n      <!-- Message si toutes les tâches sont terminées -->\n      <div class=\"project-completed-message\" *ngIf=\"isProjectCompleted(project)\">\n        ✅ Toutes les tâches de ce projet sont terminées.\n      </div>\n\n      <ul>\n        <li *ngFor=\"let task of project.tasks\">\n          <input type=\"checkbox\" [checked]=\"task.done\" \n                 [disabled]=\"task.done\" \n                 (change)=\"toggleTask(task)\" />\n          <span [class.completed]=\"task.done\">{{ task.title }}</span>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}