{"ast":null,"code":"import { debounceTime, distinctUntilChanged, Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/dashboard.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../../shared/components/header-user/header-user.component\";\nfunction DashboardComponent_div_3_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r4.id)(\"disabled\", user_r4.role === \"admin\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r4.name);\n  }\n}\nfunction DashboardComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"input\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_div_3_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.newProjectName = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"input\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_div_3_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.newProjectDescription = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_div_3_Template_select_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.assignedUserIds = $event);\n    });\n    i0.ɵɵtemplate(4, DashboardComponent_div_3_option_4_Template, 2, 3, \"option\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_3_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.addProject());\n    });\n    i0.ɵɵtext(6, \"Create Project\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"error\", ctx_r0.newProjectNameError);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newProjectName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"error\", ctx_r0.newProjectDescriptionError);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newProjectDescription);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.assignedUserIds);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.users);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.isFormValid());\n  }\n}\nfunction DashboardComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \" Fields cannot be empty!\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_6_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const project_r10 = i0.ɵɵnextContext().$implicit;\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Assigned to: \", ctx_r11.getAssignedUserNames(project_r10), \" \");\n  }\n}\nfunction DashboardComponent_div_6_li_12_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_6_li_12_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const task_r16 = i0.ɵɵnextContext().$implicit;\n      const project_r10 = i0.ɵɵnextContext().$implicit;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.removeTask(project_r10, task_r16));\n    });\n    i0.ɵɵtext(1, \"\\u00D7\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_6_li_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"input\", 21);\n    i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_div_6_li_12_Template_input_ngModelChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r23);\n      const task_r16 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(task_r16.done = $event);\n    })(\"change\", function DashboardComponent_div_6_li_12_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r23);\n      const task_r16 = restoredCtx.$implicit;\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r24.toggleTask(task_r16));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, DashboardComponent_div_6_li_12_button_4_Template, 2, 0, \"button\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r16 = ctx.$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", task_r16.done);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"text-decoration\", task_r16.done ? \"line-through\" : \"none\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r16.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r13.currentUser.role === \"admin\");\n  }\n}\nfunction DashboardComponent_div_6_button_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_6_button_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const project_r10 = i0.ɵɵnextContext().$implicit;\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.removeProject(project_r10));\n    });\n    i0.ɵɵtext(1, \"Delete Project\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, DashboardComponent_div_6_p_5_Template, 2, 1, \"p\", 13);\n    i0.ɵɵelementStart(6, \"div\", 14);\n    i0.ɵɵelement(7, \"input\", 15, 16);\n    i0.ɵɵelementStart(9, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_6_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r29);\n      const project_r10 = restoredCtx.$implicit;\n      const _r12 = i0.ɵɵreference(8);\n      const ctx_r28 = i0.ɵɵnextContext();\n      ctx_r28.addTask(project_r10, _r12.value);\n      return i0.ɵɵresetView(_r12.value = \"\");\n    });\n    i0.ɵɵtext(10, \"Add Task\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"ul\", 18);\n    i0.ɵɵtemplate(12, DashboardComponent_div_6_li_12_Template, 5, 5, \"li\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, DashboardComponent_div_6_button_13_Template, 2, 0, \"button\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const project_r10 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(project_r10.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(project_r10.description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.currentUser.role === \"admin\");\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", project_r10.tasks);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.currentUser.role === \"admin\");\n  }\n}\nexport class DashboardComponent {\n  constructor(dashboardService) {\n    this.dashboardService = dashboardService;\n    this.currentUser = {\n      id: 1,\n      name: 'Admin',\n      role: 'admin'\n    };\n    this.users = [];\n    this.filteredUsers = [];\n    this.projects = [];\n    // Formulaire projet\n    this.newProjectName = '';\n    this.newProjectDescription = '';\n    this.assignedUserIds = [];\n    this.newProjectNameError = false;\n    this.newProjectDescriptionError = false;\n    // Pour recherche utilisateur dynamique\n    this.searchTerm$ = new Subject();\n  }\n  ngOnInit() {\n    this.loadUsers();\n    this.loadProjects();\n    // Recherche utilisateur avec debounce\n    this.searchTerm$.pipe(debounceTime(300), distinctUntilChanged()).subscribe(term => this.filterUsers(term));\n  }\n  // Charger tous les utilisateurs\n  loadUsers() {\n    this.dashboardService.getAllUsers().subscribe(users => {\n      this.users = users.filter(u => u.role !== 'admin'); // On exclut les admins\n      this.filteredUsers = [...this.users];\n    });\n  }\n  // Charger tous les projets\n  loadProjects() {\n    if (this.currentUser.role === 'admin') {\n      this.dashboardService.getAllUsers().subscribe(users => {\n        // Pour simplifier, charger tous les projets des utilisateurs\n        users.forEach(user => {\n          this.dashboardService.getProjectsByUser(user.name).subscribe(projects => {\n            this.projects.push(...projects);\n          });\n        });\n      });\n    } else {\n      this.dashboardService.getProjectsByUser(this.currentUser.name).subscribe(projects => {\n        this.projects = projects;\n      });\n    }\n  }\n  // Validation formulaire\n  isFormValid() {\n    this.newProjectNameError = !this.newProjectName.trim();\n    this.newProjectDescriptionError = !this.newProjectDescription.trim();\n    return !this.newProjectNameError && !this.newProjectDescriptionError;\n  }\n  // Créer un projet (admin)\n  addProject() {\n    if (this.currentUser.role !== 'admin' || !this.isFormValid()) return;\n    const project = {\n      name: this.newProjectName.trim(),\n      description: this.newProjectDescription.trim(),\n      assignedTo: [...this.assignedUserIds],\n      tasks: []\n    };\n    // Assignation à tous les utilisateurs sélectionnés\n    this.assignedUserIds.forEach(userId => {\n      const user = this.users.find(u => u.id === userId);\n      if (user) {\n        this.dashboardService.createProject(user.name, project).subscribe(savedProject => {\n          this.projects.push(savedProject);\n        });\n      }\n    });\n    this.newProjectName = '';\n    this.newProjectDescription = '';\n    this.assignedUserIds = [];\n  }\n  // Ajouter tâche\n  addTask(project, taskTitle) {\n    if (!taskTitle.trim()) return;\n    const task = {\n      title: taskTitle.trim(),\n      done: false\n    };\n    project.tasks.push(task);\n  }\n  // Marquer tâche comme faite\n  toggleTask(task) {\n    task.done = !task.done;\n  }\n  // Supprimer tâche\n  removeTask(project, task) {\n    project.tasks = project.tasks.filter(t => t !== task);\n  }\n  // Supprimer projet (admin)\n  removeProject(project) {\n    if (this.currentUser.role !== 'admin') return;\n    if (!project.id) return;\n    this.dashboardService.deleteProject(project.id).subscribe(() => {\n      this.projects = this.projects.filter(p => p !== project);\n    });\n  }\n  // Récupérer noms utilisateurs assignés à un projet\n  getAssignedUserNames(project) {\n    return project.assignedTo.map(id => this.users.find(u => u.id === id)?.name).filter(name => !!name).join(', ');\n  }\n  // Recherche utilisateur par nom\n  onSearchUser(term) {\n    this.searchTerm$.next(term);\n  }\n  filterUsers(term) {\n    if (!term) {\n      this.filteredUsers = [...this.users];\n    } else {\n      this.filteredUsers = this.users.filter(u => u.name.toLowerCase().includes(term.toLowerCase()));\n    }\n  }\n  // Projets visibles selon le rôle\n  get visibleProjects() {\n    if (this.currentUser.role === 'admin') return this.projects;\n    return this.projects.filter(p => p.assignedTo.includes(this.currentUser.id));\n  }\n  static {\n    this.ɵfac = function DashboardComponent_Factory(t) {\n      return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.DashboardService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardComponent,\n      selectors: [[\"app-dashboard\"]],\n      decls: 7,\n      vars: 3,\n      consts: [[\"class\", \"project-form\", 4, \"ngIf\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"project-list\"], [\"class\", \"project-card\", 4, \"ngFor\", \"ngForOf\"], [1, \"project-form\"], [\"placeholder\", \"Project Name\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"Description\", 3, \"ngModel\", \"ngModelChange\"], [\"multiple\", \"\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [3, \"disabled\", \"click\"], [3, \"value\", \"disabled\"], [1, \"error-message\"], [1, \"project-card\"], [4, \"ngIf\"], [1, \"task-form\"], [\"placeholder\", \"New Task\"], [\"taskInput\", \"\"], [3, \"click\"], [1, \"task-list\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"delete-btn\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [1, \"delete-btn\", 3, \"click\"]],\n      template: function DashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"app-header-user\");\n          i0.ɵɵelementStart(1, \"h2\");\n          i0.ɵɵtext(2, \"Dashboard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, DashboardComponent_div_3_Template, 7, 9, \"div\", 0);\n          i0.ɵɵtemplate(4, DashboardComponent_div_4_Template, 2, 0, \"div\", 1);\n          i0.ɵɵelementStart(5, \"div\", 2);\n          i0.ɵɵtemplate(6, DashboardComponent_div_6_Template, 14, 5, \"div\", 3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.currentUser.role === \"admin\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.newProjectNameError || ctx.newProjectDescriptionError);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.visibleProjects);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.CheckboxControlValueAccessor, i3.SelectMultipleControlValueAccessor, i3.NgControlStatus, i3.NgModel, i4.HeaderUserComponent],\n      styles: [\".dashboard-container[_ngcontent-%COMP%] {\\n  text-align: center;\\n  padding: 50px 20px;\\n  max-width: 1000px;\\n  margin: 0 auto;\\n}\\n\\n.dashboard-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  color: #1f2937;\\n  font-size: 2rem;\\n  margin-bottom: 20px;\\n}\\n\\n.project-form[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 10px;\\n  margin-bottom: 20px;\\n  justify-content: center;\\n}\\n\\n.project-form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  border: 2px solid #e5e7eb;\\n  border-radius: 5px;\\n  font-size: 1rem;\\n}\\n\\n.project-form[_ngcontent-%COMP%]   input.error[_ngcontent-%COMP%] {\\n  border-color: #dc2626;\\n}\\n\\n.project-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  padding: 10px 20px;\\n  background-color: #4b6cb7;\\n  color: white;\\n  border: none;\\n  border-radius: 5px;\\n  cursor: pointer;\\n  transition: background-color 0.3s;\\n}\\n\\n.project-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #3a558e;\\n}\\n\\n.error-message[_ngcontent-%COMP%] {\\n  color: #dc2626;\\n  font-size: 0.9rem;\\n  margin-top: 5px;\\n}\\n\\n.project-list[_ngcontent-%COMP%] {\\n  display: grid;\\n  gap: 20px;\\n}\\n\\n.project-card[_ngcontent-%COMP%] {\\n  background: #fff;\\n  padding: 20px;\\n  border-radius: 10px;\\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\\n  transition: transform 0.3s ease;\\n}\\n\\n.project-card[_ngcontent-%COMP%]:hover {\\n  transform: translateY(-5px);\\n}\\n\\n.task-form[_ngcontent-%COMP%] {\\n  margin: 10px 0;\\n  display: flex;\\n  gap: 10px;\\n}\\n\\n.task-form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  padding: 8px;\\n  border: 2px solid #e5e7eb;\\n  border-radius: 5px;\\n}\\n\\n.task-list[_ngcontent-%COMP%] {\\n  list-style: none;\\n  padding: 0;\\n  text-align: left;\\n}\\n\\n.task-item[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n  margin: 5px 0;\\n}\\n\\n.delete-btn[_ngcontent-%COMP%] {\\n  background: #dc2626;\\n  color: white;\\n  border: none;\\n  border-radius: 50%;\\n  width: 20px;\\n  height: 20px;\\n  cursor: pointer;\\n  font-size: 1rem;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.delete-btn[_ngcontent-%COMP%]:hover {\\n  background: #b91c1c;\\n}\\n\\n@media (max-width: 600px) {\\n  .project-form[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n  .task-form[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvZGFzaGJvYXJkL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsZUFBZTtFQUNmLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixTQUFTO0VBQ1QsbUJBQW1CO0VBQ25CLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLGFBQWE7RUFDYix5QkFBeUI7RUFDekIsa0JBQWtCO0VBQ2xCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZixpQ0FBaUM7QUFDbkM7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsaUJBQWlCO0VBQ2pCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsU0FBUztBQUNYOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIseUNBQXlDO0VBQ3pDLCtCQUErQjtBQUNqQzs7QUFFQTtFQUNFLDJCQUEyQjtBQUM3Qjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxhQUFhO0VBQ2IsU0FBUztBQUNYOztBQUVBO0VBQ0UsWUFBWTtFQUNaLHlCQUF5QjtFQUN6QixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsVUFBVTtFQUNWLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsU0FBUztFQUNULGFBQWE7QUFDZjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsWUFBWTtFQUNaLGVBQWU7RUFDZixlQUFlO0VBQ2YsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQix1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRTtJQUNFLHNCQUFzQjtFQUN4QjtFQUNBO0lBQ0Usc0JBQXNCO0VBQ3hCO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIuZGFzaGJvYXJkLWNvbnRhaW5lciB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHBhZGRpbmc6IDUwcHggMjBweDtcclxuICBtYXgtd2lkdGg6IDEwMDBweDtcclxuICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5cclxuLmRhc2hib2FyZC1jb250YWluZXIgaDIge1xyXG4gIGNvbG9yOiAjMWYyOTM3O1xyXG4gIGZvbnQtc2l6ZTogMnJlbTtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcblxyXG4ucHJvamVjdC1mb3JtIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGdhcDogMTBweDtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG4ucHJvamVjdC1mb3JtIGlucHV0IHtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIGJvcmRlcjogMnB4IHNvbGlkICNlNWU3ZWI7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGZvbnQtc2l6ZTogMXJlbTtcclxufVxyXG5cclxuLnByb2plY3QtZm9ybSBpbnB1dC5lcnJvciB7XHJcbiAgYm9yZGVyLWNvbG9yOiAjZGMyNjI2O1xyXG59XHJcblxyXG4ucHJvamVjdC1mb3JtIGJ1dHRvbiB7XHJcbiAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM0YjZjYjc7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcztcclxufVxyXG5cclxuLnByb2plY3QtZm9ybSBidXR0b246aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMzYTU1OGU7XHJcbn1cclxuXHJcbi5lcnJvci1tZXNzYWdlIHtcclxuICBjb2xvcjogI2RjMjYyNjtcclxuICBmb250LXNpemU6IDAuOXJlbTtcclxuICBtYXJnaW4tdG9wOiA1cHg7XHJcbn1cclxuXHJcbi5wcm9qZWN0LWxpc3Qge1xyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ2FwOiAyMHB4O1xyXG59XHJcblxyXG4ucHJvamVjdC1jYXJkIHtcclxuICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBib3gtc2hhZG93OiAwIDRweCAxMnB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlO1xyXG59XHJcblxyXG4ucHJvamVjdC1jYXJkOmhvdmVyIHtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTVweCk7XHJcbn1cclxuXHJcbi50YXNrLWZvcm0ge1xyXG4gIG1hcmdpbjogMTBweCAwO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZ2FwOiAxMHB4O1xyXG59XHJcblxyXG4udGFzay1mb3JtIGlucHV0IHtcclxuICBwYWRkaW5nOiA4cHg7XHJcbiAgYm9yZGVyOiAycHggc29saWQgI2U1ZTdlYjtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuXHJcbi50YXNrLWxpc3Qge1xyXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgcGFkZGluZzogMDtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcblxyXG4udGFzay1pdGVtIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgZ2FwOiAxMHB4O1xyXG4gIG1hcmdpbjogNXB4IDA7XHJcbn1cclxuXHJcbi5kZWxldGUtYnRuIHtcclxuICBiYWNrZ3JvdW5kOiAjZGMyNjI2O1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gIHdpZHRoOiAyMHB4O1xyXG4gIGhlaWdodDogMjBweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgZm9udC1zaXplOiAxcmVtO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuLmRlbGV0ZS1idG46aG92ZXIge1xyXG4gIGJhY2tncm91bmQ6ICNiOTFjMWM7XHJcbn1cclxuXHJcbkBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xyXG4gIC5wcm9qZWN0LWZvcm0ge1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICB9XHJcbiAgLnRhc2stZm9ybSB7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["debounceTime","distinctUntilChanged","Subject","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","user_r4","id","role","ɵɵadvance","ɵɵtextInterpolate","name","ɵɵlistener","DashboardComponent_div_3_Template_input_ngModelChange_1_listener","$event","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","newProjectName","DashboardComponent_div_3_Template_input_ngModelChange_2_listener","ctx_r7","newProjectDescription","DashboardComponent_div_3_Template_select_ngModelChange_3_listener","ctx_r8","assignedUserIds","ɵɵtemplate","DashboardComponent_div_3_option_4_Template","DashboardComponent_div_3_Template_button_click_5_listener","ctx_r9","addProject","ɵɵclassProp","ctx_r0","newProjectNameError","newProjectDescriptionError","users","isFormValid","ɵɵtextInterpolate1","ctx_r11","getAssignedUserNames","project_r10","DashboardComponent_div_6_li_12_button_4_Template_button_click_0_listener","_r20","task_r16","$implicit","ctx_r18","removeTask","DashboardComponent_div_6_li_12_Template_input_ngModelChange_1_listener","restoredCtx","_r23","done","DashboardComponent_div_6_li_12_Template_input_change_1_listener","ctx_r24","toggleTask","DashboardComponent_div_6_li_12_button_4_Template","ɵɵstyleProp","title","ctx_r13","currentUser","DashboardComponent_div_6_button_13_Template_button_click_0_listener","_r27","ctx_r25","removeProject","DashboardComponent_div_6_p_5_Template","ɵɵelement","DashboardComponent_div_6_Template_button_click_9_listener","_r29","_r12","ɵɵreference","ctx_r28","addTask","value","DashboardComponent_div_6_li_12_Template","DashboardComponent_div_6_button_13_Template","description","ctx_r2","tasks","DashboardComponent","constructor","dashboardService","filteredUsers","projects","searchTerm$","ngOnInit","loadUsers","loadProjects","pipe","subscribe","term","filterUsers","getAllUsers","filter","u","forEach","user","getProjectsByUser","push","trim","project","assignedTo","userId","find","createProject","savedProject","taskTitle","task","t","deleteProject","p","map","join","onSearchUser","next","toLowerCase","includes","visibleProjects","ɵɵdirectiveInject","i1","DashboardService","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","DashboardComponent_div_3_Template","DashboardComponent_div_4_Template","DashboardComponent_div_6_Template"],"sources":["C:\\Users\\monta\\OneDrive\\Documents\\Projects\\todo-project-manager\\src\\app\\features\\dashboard\\dashboard\\dashboard.component.ts","C:\\Users\\monta\\OneDrive\\Documents\\Projects\\todo-project-manager\\src\\app\\features\\dashboard\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DashboardService, User, Project, Task } from '../../../services/dashboard.service';\n\nimport { debounceTime, distinctUntilChanged, Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  currentUser: User = { id: 1, name: 'Admin', role: 'admin' };\n\n  users: User[] = [];\n  filteredUsers: User[] = [];\n  projects: Project[] = [];\n\n  // Formulaire projet\n  newProjectName = '';\n  newProjectDescription = '';\n  assignedUserIds: number[] = [];\n  newProjectNameError = false;\n  newProjectDescriptionError = false;\n\n  // Pour recherche utilisateur dynamique\n  searchTerm$ = new Subject<string>();\n\n  constructor(private dashboardService: DashboardService) {}\n\n  ngOnInit(): void {\n    this.loadUsers();\n    this.loadProjects();\n\n    // Recherche utilisateur avec debounce\n    this.searchTerm$.pipe(\n      debounceTime(300),\n      distinctUntilChanged()\n    ).subscribe(term => this.filterUsers(term));\n  }\n\n  // Charger tous les utilisateurs\n  loadUsers() {\n    this.dashboardService.getAllUsers().subscribe(users => {\n      this.users = users.filter(u => u.role !== 'admin'); // On exclut les admins\n      this.filteredUsers = [...this.users];\n    });\n  }\n\n  // Charger tous les projets\n  loadProjects() {\n    if (this.currentUser.role === 'admin') {\n      this.dashboardService.getAllUsers().subscribe(users => {\n        // Pour simplifier, charger tous les projets des utilisateurs\n        users.forEach(user => {\n          this.dashboardService.getProjectsByUser(user.name).subscribe(projects => {\n            this.projects.push(...projects);\n          });\n        });\n      });\n    } else {\n      this.dashboardService.getProjectsByUser(this.currentUser.name).subscribe(projects => {\n        this.projects = projects;\n      });\n    }\n  }\n\n  // Validation formulaire\n  isFormValid(): boolean {\n    this.newProjectNameError = !this.newProjectName.trim();\n    this.newProjectDescriptionError = !this.newProjectDescription.trim();\n    return !this.newProjectNameError && !this.newProjectDescriptionError;\n  }\n\n  // Créer un projet (admin)\n  addProject() {\n    if (this.currentUser.role !== 'admin' || !this.isFormValid()) return;\n\n    const project: Project = {\n      name: this.newProjectName.trim(),\n      description: this.newProjectDescription.trim(),\n      assignedTo: [...this.assignedUserIds],\n      tasks: []\n    };\n\n    // Assignation à tous les utilisateurs sélectionnés\n    this.assignedUserIds.forEach(userId => {\n      const user = this.users.find(u => u.id === userId);\n      if (user) {\n        this.dashboardService.createProject(user.name, project).subscribe(savedProject => {\n          this.projects.push(savedProject);\n        });\n      }\n    });\n\n    this.newProjectName = '';\n    this.newProjectDescription = '';\n    this.assignedUserIds = [];\n  }\n\n  // Ajouter tâche\n  addTask(project: Project, taskTitle: string) {\n    if (!taskTitle.trim()) return;\n    const task: Task = { title: taskTitle.trim(), done: false };\n    project.tasks.push(task);\n  }\n\n  // Marquer tâche comme faite\n  toggleTask(task: Task) {\n    task.done = !task.done;\n  }\n\n  // Supprimer tâche\n  removeTask(project: Project, task: Task) {\n    project.tasks = project.tasks.filter(t => t !== task);\n  }\n\n  // Supprimer projet (admin)\n  removeProject(project: Project) {\n    if (this.currentUser.role !== 'admin') return;\n    if (!project.id) return;\n\n    this.dashboardService.deleteProject(project.id).subscribe(() => {\n      this.projects = this.projects.filter(p => p !== project);\n    });\n  }\n\n  // Récupérer noms utilisateurs assignés à un projet\n  getAssignedUserNames(project: Project): string {\n    return project.assignedTo\n      .map(id => this.users.find(u => u.id === id)?.name)\n      .filter(name => !!name)\n      .join(', ');\n  }\n\n  // Recherche utilisateur par nom\n  onSearchUser(term: string) {\n    this.searchTerm$.next(term);\n  }\n\n  filterUsers(term: string) {\n    if (!term) {\n      this.filteredUsers = [...this.users];\n    } else {\n      this.filteredUsers = this.users.filter(u => u.name.toLowerCase().includes(term.toLowerCase()));\n    }\n  }\n\n  // Projets visibles selon le rôle\n  get visibleProjects(): Project[] {\n    if (this.currentUser.role === 'admin') return this.projects;\n    return this.projects.filter(p => p.assignedTo.includes(this.currentUser.id));\n  }\n}\n","<app-header-user></app-header-user>\n<h2>Dashboard</h2>\n\n<!-- Project creation form (admin only) -->\n<div *ngIf=\"currentUser.role==='admin'\" class=\"project-form\">\n  <input [(ngModel)]=\"newProjectName\" placeholder=\"Project Name\" [class.error]=\"newProjectNameError\" />\n  <input [(ngModel)]=\"newProjectDescription\" placeholder=\"Description\" [class.error]=\"newProjectDescriptionError\" />\n\n  <!-- Select users to assign -->\n  <select multiple [(ngModel)]=\"assignedUserIds\">\n    <option *ngFor=\"let user of users\" [value]=\"user.id\" [disabled]=\"user.role==='admin'\">{{user.name}}</option>\n  </select>\n\n  <button (click)=\"addProject()\" [disabled]=\"!isFormValid()\">Create Project</button>\n</div>\n\n<div class=\"error-message\" *ngIf=\"newProjectNameError || newProjectDescriptionError\">\n  Fields cannot be empty!\n</div>\n\n<!-- Project list -->\n<div class=\"project-list\">\n  <div *ngFor=\"let project of visibleProjects\" class=\"project-card\">\n    <h3>{{ project.name }}</h3>\n    <p>{{ project.description }}</p>\n\n    <p *ngIf=\"currentUser.role==='admin'\">\n      Assigned to: {{ getAssignedUserNames(project) }}\n    </p>\n\n    <!-- Add task -->\n    <div class=\"task-form\">\n      <input #taskInput placeholder=\"New Task\" />\n      <button (click)=\"addTask(project, taskInput.value); taskInput.value=''\">Add Task</button>\n    </div>\n\n    <!-- Task list -->\n    <ul class=\"task-list\">\n      <li *ngFor=\"let task of project.tasks\">\n        <input type=\"checkbox\" [(ngModel)]=\"task.done\" (change)=\"toggleTask(task)\" />\n        <span [style.text-decoration]=\"task.done ? 'line-through' : 'none'\">{{ task.title }}</span>\n        <button *ngIf=\"currentUser.role==='admin'\" (click)=\"removeTask(project, task)\" class=\"delete-btn\">×</button>\n      </li>\n    </ul>\n\n    <button *ngIf=\"currentUser.role==='admin'\" (click)=\"removeProject(project)\" class=\"delete-btn\">Delete Project</button>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}