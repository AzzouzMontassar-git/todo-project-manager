{"ast":null,"code":"import { environment } from './../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.API_URL}/auth`;\n  }\n  login(credentials) {\n    return this.http.post(`${this.apiUrl}/login`, credentials);\n  }\n  saveAuthData(token, user) {\n    localStorage.setItem('authToken', token);\n    localStorage.setItem('authUser', JSON.stringify(user));\n  }\n  getToken() {\n    return localStorage.getItem('authToken');\n  }\n  getUser() {\n    const user = localStorage.getItem('authUser');\n    return user ? JSON.parse(user) : null;\n  }\n  logout() {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('authUser');\n  }\n  isLoggedIn() {\n    return !!this.getToken();\n  }\n  getUserByEmail(email) {\n    const token = this.getToken();\n    return this.http.get(`${environment.API_URL}/users/email/${email}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","AuthService","constructor","http","apiUrl","API_URL","login","credentials","post","saveAuthData","token","user","localStorage","setItem","JSON","stringify","getToken","getItem","getUser","parse","logout","removeItem","isLoggedIn","getUserByEmail","email","get","headers","Authorization","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\monta\\OneDrive\\Documents\\Projects\\todo-project-manager\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from './../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private apiUrl = `${environment.API_URL}/auth`;\n\n  constructor(private http: HttpClient) {}\n\n  login(credentials: { email: string; password: string }): Observable<any> {\n    return this.http.post(`${this.apiUrl}/login`, credentials);\n  }\n\n  saveAuthData(token: string, user: any): void {\n    localStorage.setItem('authToken', token);\n    localStorage.setItem('authUser', JSON.stringify(user));\n  }\n\n  getToken(): string | null {\n    return localStorage.getItem('authToken');\n  }\n\n  getUser(): any | null {\n    const user = localStorage.getItem('authUser');\n    return user ? JSON.parse(user) : null;\n  }\n\n  logout(): void {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('authUser');\n  }\n\n  isLoggedIn(): boolean {\n    return !!this.getToken();\n  }\n\n  getUserByEmail(email: string): Observable<any> {\n    const token = this.getToken();\n    return this.http.get(`${environment.API_URL}/users/email/${email}`, {\n      headers: { Authorization: `Bearer ${token}` }\n    });\n  }\n}\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,+BAA+B;;;AAK3D,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACK,OAAO,OAAO;EAEP;EAEvCC,KAAKA,CAACC,WAAgD;IACpD,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,GAAG,IAAI,CAACJ,MAAM,QAAQ,EAAEG,WAAW,CAAC;EAC5D;EAEAE,YAAYA,CAACC,KAAa,EAAEC,IAAS;IACnCC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEH,KAAK,CAAC;IACxCE,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;EACxD;EAEAK,QAAQA,CAAA;IACN,OAAOJ,YAAY,CAACK,OAAO,CAAC,WAAW,CAAC;EAC1C;EAEAC,OAAOA,CAAA;IACL,MAAMP,IAAI,GAAGC,YAAY,CAACK,OAAO,CAAC,UAAU,CAAC;IAC7C,OAAON,IAAI,GAAGG,IAAI,CAACK,KAAK,CAACR,IAAI,CAAC,GAAG,IAAI;EACvC;EAEAS,MAAMA,CAAA;IACJR,YAAY,CAACS,UAAU,CAAC,WAAW,CAAC;IACpCT,YAAY,CAACS,UAAU,CAAC,UAAU,CAAC;EACrC;EAEAC,UAAUA,CAAA;IACR,OAAO,CAAC,CAAC,IAAI,CAACN,QAAQ,EAAE;EAC1B;EAEAO,cAAcA,CAACC,KAAa;IAC1B,MAAMd,KAAK,GAAG,IAAI,CAACM,QAAQ,EAAE;IAC7B,OAAO,IAAI,CAACb,IAAI,CAACsB,GAAG,CAAC,GAAGzB,WAAW,CAACK,OAAO,gBAAgBmB,KAAK,EAAE,EAAE;MAClEE,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUjB,KAAK;MAAE;KAC5C,CAAC;EACJ;;;uBArCWT,WAAW,EAAA2B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAX9B,WAAW;MAAA+B,OAAA,EAAX/B,WAAW,CAAAgC,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}