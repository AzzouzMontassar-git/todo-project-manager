{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let DashboardClientComponent = class DashboardClientComponent {\n  constructor(dashboardClientService) {\n    this.dashboardClientService = dashboardClientService;\n    this.currentUser = null; // utilisateur connectÃ©\n    this.projects = [];\n    this.users = [];\n    this.loadingProjects = true;\n    this.loadingUsers = true;\n    this.errorMessage = '';\n  }\n  ngOnInit() {\n    // ðŸ”¹ RÃ©cupÃ©rer l'utilisateur connectÃ© depuis le localStorage\n    const userData = localStorage.getItem('currentUser');\n    if (userData) {\n      this.currentUser = JSON.parse(userData);\n    }\n    // ðŸ”¹ VÃ©rifier que currentUser et email existent\n    if (!this.currentUser || !this.currentUser.email) {\n      this.errorMessage = \"Vous n'Ãªtes pas connectÃ© ou l'email est manquant.\";\n      return;\n    }\n    // ðŸ”¹ Charger les projets assignÃ©s Ã  l'utilisateur\n    this.dashboardClientService.getProjectsByUserEmail(this.currentUser.email).subscribe({\n      next: projects => {\n        this.projects = projects;\n        this.loadingProjects = false;\n      },\n      error: err => {\n        console.error('Erreur lors du chargement des projets :', err);\n        this.errorMessage = \"Impossible de charger les projets.\";\n        this.loadingProjects = false;\n      }\n    });\n    // ðŸ”¹ Charger tous les utilisateurs\n    this.dashboardClientService.getAllUsers().subscribe({\n      next: users => {\n        this.users = users;\n        this.loadingUsers = false;\n      },\n      error: err => {\n        console.error('Erreur lors du chargement des utilisateurs :', err);\n        this.errorMessage = \"Impossible de charger les utilisateurs.\";\n        this.loadingUsers = false;\n      }\n    });\n  }\n  addTask(project, title) {\n    if (!title.trim()) return;\n    if (!project.id) {\n      console.error('ID du projet manquant pour ajouter une tÃ¢che.');\n      return;\n    }\n    const newTask = {\n      title,\n      done: false\n    };\n    this.dashboardClientService.addTaskToProject(project.id, newTask).subscribe({\n      next: savedTask => {\n        if (!project.tasks) project.tasks = [];\n        project.tasks.push(savedTask);\n      },\n      error: err => console.error('Erreur ajout tÃ¢che :', err)\n    });\n  }\n  toggleTask(task) {\n    if (!task.id) {\n      console.error('ID de la tÃ¢che manquant pour toggle.');\n      return;\n    }\n    this.dashboardClientService.toggleTaskStatus(task.id).subscribe({\n      next: updatedTask => {\n        task.done = updatedTask.done;\n      },\n      error: err => console.error('Erreur toggle tÃ¢che :', err)\n    });\n  }\n  getUserName(userId) {\n    const user = this.users.find(u => u.id === userId);\n    return user ? `${user.nom} ${user.prenom}` : 'Utilisateur inconnu';\n  }\n  get displayName() {\n    if (!this.currentUser) return 'Utilisateur';\n    if (this.currentUser.nom && this.currentUser.prenom) {\n      return `${this.currentUser.nom} ${this.currentUser.prenom}`;\n    }\n    if (this.currentUser.nom) return this.currentUser.nom;\n    return 'Utilisateur';\n  }\n};\nDashboardClientComponent = __decorate([Component({\n  selector: 'app-dashboard-client',\n  templateUrl: './dashboard-client.component.html',\n  styleUrls: ['./dashboard-client.component.css']\n})], DashboardClientComponent);","map":{"version":3,"names":["Component","DashboardClientComponent","constructor","dashboardClientService","currentUser","projects","users","loadingProjects","loadingUsers","errorMessage","ngOnInit","userData","localStorage","getItem","JSON","parse","email","getProjectsByUserEmail","subscribe","next","error","err","console","getAllUsers","addTask","project","title","trim","id","newTask","done","addTaskToProject","savedTask","tasks","push","toggleTask","task","toggleTaskStatus","updatedTask","getUserName","userId","user","find","u","nom","prenom","displayName","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\monta\\OneDrive\\Documents\\Projects\\todo-project-manager\\src\\app\\features\\dashboard\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Project, Task, User, DashboardClientService } from '../../../services/dashboard-client.service';\n\n@Component({\n  selector: 'app-dashboard-client',\n  templateUrl: './dashboard-client.component.html',\n  styleUrls: ['./dashboard-client.component.css']\n})\nexport class DashboardClientComponent implements OnInit {\n  currentUser: User | null = null; // utilisateur connectÃ©\n  projects: Project[] = [];\n  users: User[] = [];\n  loadingProjects: boolean = true;\n  loadingUsers: boolean = true;\n  errorMessage: string = '';\n\n  constructor(private dashboardClientService: DashboardClientService) {}\n\n  ngOnInit(): void {\n    // ðŸ”¹ RÃ©cupÃ©rer l'utilisateur connectÃ© depuis le localStorage\n    const userData = localStorage.getItem('currentUser');\n    if (userData) {\n      this.currentUser = JSON.parse(userData);\n    }\n\n    // ðŸ”¹ VÃ©rifier que currentUser et email existent\n    if (!this.currentUser || !this.currentUser.email) {\n      this.errorMessage = \"Vous n'Ãªtes pas connectÃ© ou l'email est manquant.\";\n      return;\n    }\n\n    // ðŸ”¹ Charger les projets assignÃ©s Ã  l'utilisateur\n    this.dashboardClientService.getProjectsByUserEmail(this.currentUser.email)\n      .subscribe({\n        next: (projects) => {\n          this.projects = projects;\n          this.loadingProjects = false;\n        },\n        error: (err) => {\n          console.error('Erreur lors du chargement des projets :', err);\n          this.errorMessage = \"Impossible de charger les projets.\";\n          this.loadingProjects = false;\n        }\n      });\n\n    // ðŸ”¹ Charger tous les utilisateurs\n    this.dashboardClientService.getAllUsers()\n      .subscribe({\n        next: (users) => {\n          this.users = users;\n          this.loadingUsers = false;\n        },\n        error: (err) => {\n          console.error('Erreur lors du chargement des utilisateurs :', err);\n          this.errorMessage = \"Impossible de charger les utilisateurs.\";\n          this.loadingUsers = false;\n        }\n      });\n  }\n\n  addTask(project: Project, title: string) {\n    if (!title.trim()) return;\n    if (!project.id) {\n      console.error('ID du projet manquant pour ajouter une tÃ¢che.');\n      return;\n    }\n\n    const newTask: Task = { title, done: false };\n    this.dashboardClientService.addTaskToProject(project.id, newTask)\n      .subscribe({\n        next: (savedTask: Task) => {\n          if (!project.tasks) project.tasks = [];\n          project.tasks.push(savedTask);\n        },\n        error: (err) => console.error('Erreur ajout tÃ¢che :', err)\n      });\n  }\n\n  toggleTask(task: Task) {\n    if (!task.id) {\n      console.error('ID de la tÃ¢che manquant pour toggle.');\n      return;\n    }\n\n    this.dashboardClientService.toggleTaskStatus(task.id)\n      .subscribe({\n        next: (updatedTask: Task) => {\n          task.done = updatedTask.done;\n        },\n        error: (err) => console.error('Erreur toggle tÃ¢che :', err)\n      });\n  }\n\n  getUserName(userId: number): string {\n    const user = this.users.find(u => u.id === userId);\n    return user ? `${user.nom} ${user.prenom}` : 'Utilisateur inconnu';\n  }\n\n  get displayName(): string {\n    if (!this.currentUser) return 'Utilisateur';\n    if (this.currentUser.nom && this.currentUser.prenom) {\n      return `${this.currentUser.nom} ${this.currentUser.prenom}`;\n    }\n    if (this.currentUser.nom) return this.currentUser.nom;\n    return 'Utilisateur';\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}